{
  "version": 3,
  "sources": ["optional-peer-dep:__vite-optional-peer-dep:axios:langchain", "optional-peer-dep:__vite-optional-peer-dep:cheerio:langchain", "../../binary-search/index.js", "../../num-sort/index.js", "../../langchain/dist/tools/webbrowser.js", "../../@langchain/core/dist/utils/js-sha1/hash.js", "../../@langchain/core/dist/language_models/base.js", "../../@langchain/core/dist/tools.js", "../../@langchain/core/dist/output_parsers/base.js", "../../@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js", "../../@langchain/core/dist/utils/@cfworker/json-schema/src/format.js", "../../@langchain/core/dist/output_parsers/transform.js", "../../@langchain/core/dist/output_parsers/string.js", "../../@langchain/core/dist/utils/sax-js/sax.js", "../../ml-distance/src/similarities/czekanowski.ts", "../../ml-distance/src/distances/dice.ts", "../../ml-distance/src/distances/intersection.ts", "../../ml-distance/src/similarities/kumarHassebrook.ts", "../../ml-distance/src/distances/kulczynski.ts", "../../ml-distance/src/distances/motyka.ts", "../../ml-distance/src/distances/squaredChord.ts", "../../ml-distance/src/similarities/tanimoto.ts", "../../ml-distance/src/similarities.ts", "../../ml-tree-similarity/src/index.js", "../../ml-tree-similarity/src/createTree.js", "../../ml-tree-similarity/src/getSimilarity.js", "../../ml-distance/src/similarities/cosine.ts", "../../ml-distance/src/similarities/dice.ts", "../../ml-distance/src/similarities/intersection.ts", "../../ml-distance/src/similarities/kulczynski.ts", "../../ml-distance/src/similarities/motyka.ts", "../../is-any-array/src/index.ts", "../../ml-array-sum/lib-es6/index.js", "../../ml-array-mean/lib-es6/index.js", "../../ml-distance/src/similarities/pearson.ts", "../../ml-distance/src/similarities/squaredChord.ts", "../../@langchain/core/dist/retrievers/index.js", "../../@langchain/core/dist/vectorstores.js", "../../langchain/dist/vectorstores/memory.js", "../../langchain/dist/util/axios-fetch-adapter.js", "../../@langchain/core/dist/utils/event_source_parse.js", "../../langchain/dist/util/document.js"],
  "sourcesContent": ["throw new Error(`Could not resolve \"axios\" imported by \"langchain\". Is it installed?`)", "throw new Error(`Could not resolve \"cheerio\" imported by \"langchain\". Is it installed?`)", "module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    // The naive `low + high >>> 1` could fail for array lengths > 2**31\n    // because `>>>` converts its operands to int32. `low + (high - low >>> 1)`\n    // works for array lengths <= 2**32-1 which is also Javascript's max array\n    // length.\n    mid = low + ((high - low) >>> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    // Too low.\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    // Too high.\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    // Key found.\n    else\n      return mid;\n  }\n\n  // Key not found.\n  return ~low;\n}\n", "'use strict';\n\nfunction assertNumber(number) {\n\tif (typeof number !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.ascending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn -1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn 1;\n\t}\n\n\treturn left - right;\n};\n\nexports.descending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn 1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn -1;\n\t}\n\n\treturn right - left;\n};\n", "import { Document } from \"@langchain/core/documents\";\nimport axiosMod from \"axios\";\nimport * as cheerio from \"cheerio\";\nimport { isNode } from \"@langchain/core/utils/env\";\nimport { Tool } from \"@langchain/core/tools\";\nimport { RunnableSequence } from \"@langchain/core/runnables\";\nimport { StringOutputParser } from \"@langchain/core/output_parsers\";\nimport { RecursiveCharacterTextSplitter, } from \"../text_splitter.js\";\nimport { MemoryVectorStore } from \"../vectorstores/memory.js\";\nimport fetchAdapter from \"../util/axios-fetch-adapter.js\";\nimport { formatDocumentsAsString } from \"../util/document.js\";\nexport const parseInputs = (inputs) => {\n    const [baseUrl, task] = inputs.split(\",\").map((input) => {\n        let t = input.trim();\n        t = t.startsWith('\"') ? t.slice(1) : t;\n        t = t.endsWith('\"') ? t.slice(0, -1) : t;\n        // it likes to put / at the end of urls, wont matter for task\n        t = t.endsWith(\"/\") ? t.slice(0, -1) : t;\n        return t.trim();\n    });\n    return [baseUrl, task];\n};\nexport const getText = (html, baseUrl, summary) => {\n    // scriptingEnabled so noscript elements are parsed\n    const $ = cheerio.load(html, { scriptingEnabled: true });\n    let text = \"\";\n    // lets only get the body if its a summary, dont need to summarize header or footer etc\n    const rootElement = summary ? \"body \" : \"*\";\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    $(`${rootElement}:not(style):not(script):not(svg)`).each((_i, elem) => {\n        // we dont want duplicated content as we drill down so remove children\n        let content = $(elem).clone().children().remove().end().text().trim();\n        const $el = $(elem);\n        // if its an ahref, print the content and url\n        let href = $el.attr(\"href\");\n        if ($el.prop(\"tagName\")?.toLowerCase() === \"a\" && href) {\n            if (!href.startsWith(\"http\")) {\n                try {\n                    href = new URL(href, baseUrl).toString();\n                }\n                catch {\n                    // if this fails thats fine, just no url for this\n                    href = \"\";\n                }\n            }\n            const imgAlt = $el.find(\"img[alt]\").attr(\"alt\")?.trim();\n            if (imgAlt) {\n                content += ` ${imgAlt}`;\n            }\n            text += ` [${content}](${href})`;\n        }\n        // otherwise just print the content\n        else if (content !== \"\") {\n            text += ` ${content}`;\n        }\n    });\n    return text.trim().replace(/\\n+/g, \" \");\n};\nconst getHtml = async (baseUrl, h, config) => {\n    const axios = (\"default\" in axiosMod ? axiosMod.default : axiosMod);\n    const domain = new URL(baseUrl).hostname;\n    const headers = { ...h };\n    // these appear to be positional, which means they have to exist in the headers passed in\n    headers.Host = domain;\n    headers[\"Alt-Used\"] = domain;\n    let htmlResponse;\n    try {\n        htmlResponse = await axios.get(baseUrl, {\n            ...config,\n            headers,\n        });\n    }\n    catch (e) {\n        if (axios.isAxiosError(e) && e.response && e.response.status) {\n            throw new Error(`http response ${e.response.status}`);\n        }\n        throw e;\n    }\n    const allowedContentTypes = [\n        \"text/html\",\n        \"application/json\",\n        \"application/xml\",\n        \"application/javascript\",\n        \"text/plain\",\n    ];\n    const contentType = htmlResponse.headers[\"content-type\"];\n    const contentTypeArray = contentType.split(\";\");\n    if (contentTypeArray[0] &&\n        !allowedContentTypes.includes(contentTypeArray[0])) {\n        throw new Error(\"returned page was not utf8\");\n    }\n    return htmlResponse.data;\n};\nconst DEFAULT_HEADERS = {\n    Accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Accept-Language\": \"en-US,en;q=0.5\",\n    \"Alt-Used\": \"LEAVE-THIS-KEY-SET-BY-TOOL\",\n    Connection: \"keep-alive\",\n    Host: \"LEAVE-THIS-KEY-SET-BY-TOOL\",\n    Referer: \"https://www.google.com/\",\n    \"Sec-Fetch-Dest\": \"document\",\n    \"Sec-Fetch-Mode\": \"navigate\",\n    \"Sec-Fetch-Site\": \"cross-site\",\n    \"Upgrade-Insecure-Requests\": \"1\",\n    \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/111.0\",\n};\n/**\n * A class designed to interact with web pages, either to extract\n * information from them or to summarize their content. It uses the axios\n * library to send HTTP requests and the cheerio library to parse the\n * returned HTML.\n * @example\n * ```typescript\n * const browser = new WebBrowser({\n *   model: new ChatOpenAI({ temperature: 0 }),\n *   embeddings: new OpenAIEmbeddings({}),\n * });\n * const result = await browser.invoke(\"https:exampleurl.com\");\n * ```\n */\nexport class WebBrowser extends Tool {\n    static lc_name() {\n        return \"WebBrowser\";\n    }\n    get lc_namespace() {\n        return [...super.lc_namespace, \"webbrowser\"];\n    }\n    constructor({ model, headers, embeddings, axiosConfig, textSplitter, }) {\n        super(...arguments);\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"embeddings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"axiosConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textSplitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"web-browser\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `useful for when you need to find something on or summarize a webpage. input should be a comma separated list of \"ONE valid http URL including protocol\",\"what you want to find on the page or empty string for a summary\".`\n        });\n        this.model = model;\n        this.embeddings = embeddings;\n        this.headers = headers ?? DEFAULT_HEADERS;\n        this.axiosConfig = {\n            withCredentials: true,\n            adapter: isNode() ? undefined : fetchAdapter,\n            ...axiosConfig,\n        };\n        this.textSplitter =\n            textSplitter ??\n                new RecursiveCharacterTextSplitter({\n                    chunkSize: 2000,\n                    chunkOverlap: 200,\n                });\n    }\n    /** @ignore */\n    async _call(inputs, runManager) {\n        const [baseUrl, task] = parseInputs(inputs);\n        const doSummary = !task;\n        let text;\n        try {\n            const html = await getHtml(baseUrl, this.headers, this.axiosConfig);\n            text = getText(html, baseUrl, doSummary);\n        }\n        catch (e) {\n            if (e) {\n                return e.toString();\n            }\n            return \"There was a problem connecting to the site\";\n        }\n        const texts = await this.textSplitter.splitText(text);\n        let context;\n        // if we want a summary grab first 4\n        if (doSummary) {\n            context = texts.slice(0, 4).join(\"\\n\");\n        }\n        // search term well embed and grab top 4\n        else {\n            const docs = texts.map((pageContent) => new Document({\n                pageContent,\n                metadata: [],\n            }));\n            const vectorStore = await MemoryVectorStore.fromDocuments(docs, this.embeddings);\n            const results = await vectorStore.similaritySearch(task, 4, undefined, runManager?.getChild(\"vectorstore\"));\n            context = formatDocumentsAsString(results);\n        }\n        const input = `Text:${context}\\n\\nI need ${doSummary ? \"a summary\" : task} from the above text, also provide up to 5 markdown links from within that would be of interest (always including URL and text). Links should be provided, if present, in markdown syntax as a list under the heading \"Relevant Links:\".`;\n        const chain = RunnableSequence.from([this.model, new StringOutputParser()]);\n        return chain.invoke(input, runManager?.getChild());\n    }\n}\n", "// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nexport const insecureHash = (message) => {\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n", "import { InMemoryCache } from \"../caches.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n    if (typeof tool !== \"object\" || !tool)\n        return false;\n    if (\"type\" in tool &&\n        tool.type === \"function\" &&\n        \"function\" in tool &&\n        typeof tool.function === \"object\" &&\n        tool.function &&\n        \"name\" in tool.function &&\n        \"parameters\" in tool.function) {\n        return true;\n    }\n    return false;\n}\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...params,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof params.cache === \"object\") {\n            this.cache = params.cache;\n        }\n        else if (params.cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    async getNumTokens(content) {\n        // TODO: Figure out correct value.\n        if (typeof content !== \"string\") {\n            return 0;\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(content.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(content).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n", "import { z } from \"zod\";\nimport { CallbackManager, parseCallbackConfigArg, } from \"./callbacks/manager.js\";\nimport { BaseLangChain, } from \"./language_models/base.js\";\nimport { ensureConfig } from \"./runnables/config.js\";\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n/**\n * Base class for Tools that accept input of any shape defined by a Zod schema.\n */\nexport class StructuredTool extends BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"tools\"];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"returnDirect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    /**\n     * Invokes the tool with the provided input and configuration.\n     * @param input The input for the tool.\n     * @param config Optional configuration for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async invoke(input, config) {\n        return this.call(input, ensureConfig(config));\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument, configuration, and tags. It\n     * parses the input according to the schema, handles any errors, and\n     * manages callbacks.\n     * @param arg The input argument for the tool.\n     * @param configArg Optional configuration or callbacks for the tool.\n     * @param tags Optional tags for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        let parsed;\n        try {\n            parsed = await this.schema.parseAsync(arg);\n        }\n        catch (e) {\n            throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(arg));\n        }\n        const config = parseCallbackConfigArg(configArg);\n        const callbackManager_ = await CallbackManager.configure(config.callbacks, this.callbacks, config.tags || tags, this.tags, config.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleToolStart(this.toJSON(), typeof parsed === \"string\" ? parsed : JSON.stringify(parsed), config.runId, undefined, undefined, undefined, config.runName);\n        delete config.runId;\n        let result;\n        try {\n            result = await this._call(parsed, runManager, config);\n        }\n        catch (e) {\n            await runManager?.handleToolError(e);\n            throw e;\n        }\n        await runManager?.handleToolEnd(result);\n        return result;\n    }\n}\n/**\n * Base class for Tools that accept input as a string.\n */\nexport class Tool extends StructuredTool {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: z\n                .object({ input: z.string().optional() })\n                .transform((obj) => obj.input)\n        });\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument and callbacks. It handles\n     * string inputs specifically.\n     * @param arg The input argument for the tool, which can be a string, undefined, or an input of the tool's schema.\n     * @param callbacks Optional callbacks for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    call(arg, callbacks) {\n        return super.call(typeof arg === \"string\" || !arg ? { input: arg } : arg, callbacks);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and description.\n */\nexport class DynamicTool extends Tool {\n    static lc_name() {\n        return \"DynamicTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg) {\n        const config = parseCallbackConfigArg(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        return super.call(arg, config);\n    }\n    /** @ignore */\n    async _call(input, runManager, config) {\n        return this.func(input, runManager, config);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and\n * description, designed to work with structured data. It extends the\n * StructuredTool class and overrides the _call method to execute the\n * provided function when the tool is called.\n */\nexport class DynamicStructuredTool extends StructuredTool {\n    static lc_name() {\n        return \"DynamicStructuredTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n        this.schema = fields.schema;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        const config = parseCallbackConfigArg(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        return super.call(arg, config, tags);\n    }\n    _call(arg, runManager, config) {\n        return this.func(arg, runManager, config);\n    }\n}\n/**\n * Abstract base class for toolkits in LangChain. Toolkits are collections\n * of tools that agents can use. Subclasses must implement the `tools`\n * property to provide the specific tools for the toolkit.\n */\nexport class BaseToolkit {\n    getTools() {\n        return this.tools;\n    }\n}\n/**\n * Creates a new StructuredTool instance with the provided function, name, description, and schema.\n * @function\n * @template {ZodAny} RunInput The input schema for the tool.\n *\n * @param {RunnableFunc<RunInput, string>} func - The function to invoke when the tool is called.\n * @param fields - An object containing the following properties:\n * @param {string} fields.name The name of the tool.\n * @param {string | undefined} fields.description The description of the tool. Defaults to either the description on the Zod schema, or `${fields.name} tool`.\n * @param {z.ZodObject<any, any, any, any>} fields.schema The Zod schema defining the input for the tool.\n *\n * @returns {StructuredTool<RunInput, string>} A new StructuredTool instance.\n */\nexport function tool(func, fields) {\n    const schema = fields.schema ??\n        z.object({ input: z.string().optional() }).transform((obj) => obj.input);\n    const description = fields.description ?? schema.description ?? `${fields.name} tool`;\n    return new DynamicStructuredTool({\n        name: fields.name,\n        description,\n        schema: schema,\n        func: async (input, _runManager, config) => func(input, config),\n    });\n}\n", "import { Runnable } from \"../runnables/index.js\";\n/**\n * Abstract base class for parsing the output of a Large Language Model\n * (LLM) call. It provides methods for parsing the result of an LLM call\n * and invoking the parser with a given input.\n */\nexport class BaseLLMOutputParser extends Runnable {\n    /**\n     * Parses the result of an LLM call with a given prompt. By default, it\n     * simply calls `parseResult`.\n     * @param generations The generations from an LLM call.\n     * @param _prompt The prompt used in the LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parseResultWithPrompt(generations, _prompt, callbacks) {\n        return this.parseResult(generations, callbacks);\n    }\n    _baseMessageToString(message) {\n        return typeof message.content === \"string\"\n            ? message.content\n            : this._baseMessageContentToString(message.content);\n    }\n    _baseMessageContentToString(content) {\n        return JSON.stringify(content);\n    }\n    /**\n     * Calls the parser with a given input and optional configuration options.\n     * If the input is a string, it creates a generation with the input as\n     * text and calls `parseResult`. If the input is a `BaseMessage`, it\n     * creates a generation with the input as a message and the content of the\n     * input as text, and then calls `parseResult`.\n     * @param input The input to the parser, which can be a string or a `BaseMessage`.\n     * @param options Optional configuration options.\n     * @returns A promise of the parsed output.\n     */\n    async invoke(input, options) {\n        if (typeof input === \"string\") {\n            return this._callWithConfig(async (input, options) => this.parseResult([{ text: input }], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n        else {\n            return this._callWithConfig(async (input, options) => this.parseResult([\n                {\n                    message: input,\n                    text: this._baseMessageToString(input),\n                },\n            ], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call.\n */\nexport class BaseOutputParser extends BaseLLMOutputParser {\n    parseResult(generations, callbacks) {\n        return this.parse(generations[0].text, callbacks);\n    }\n    async parseWithPrompt(text, _prompt, callbacks) {\n        return this.parse(text, callbacks);\n    }\n    /**\n     * Return the string type key uniquely identifying this class of parser\n     */\n    _type() {\n        throw new Error(\"_type not implemented\");\n    }\n}\n/**\n * Exception that output parsers should raise to signify a parsing error.\n *\n * This exists to differentiate parsing errors from other code or execution errors\n * that also may arise inside the output parser. OutputParserExceptions will be\n * available to catch and handle in ways to fix the parsing error, while other\n * errors will be raised.\n *\n * @param message - The error that's being re-raised or an error message.\n * @param llmOutput - String model output which is error-ing.\n * @param observation - String explanation of error which can be passed to a\n *     model to try and remediate the issue.\n * @param sendToLLM - Whether to send the observation and llm_output back to an Agent\n *     after an OutputParserException has been raised. This gives the underlying\n *     model driving the agent the context that the previous output was improperly\n *     structured, in the hopes that it will update the output to the correct\n *     format.\n */\nexport class OutputParserException extends Error {\n    constructor(message, llmOutput, observation, sendToLLM = false) {\n        super(message);\n        Object.defineProperty(this, \"llmOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sendToLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmOutput = llmOutput;\n        this.observation = observation;\n        this.sendToLLM = sendToLLM;\n        if (sendToLLM) {\n            if (observation === undefined || llmOutput === undefined) {\n                throw new Error(\"Arguments 'observation' & 'llmOutput' are required if 'sendToLlm' is true\");\n            }\n        }\n    }\n}\n", "import { encodePointer } from \"./pointer.js\";\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true,\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true,\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true,\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true,\n};\n/**\n * Default base URI for schemas without an $id.\n * https://json-schema.org/draft/2019-09/json-schema-core.html#initial-base\n * https://tools.ietf.org/html/rfc3986#section-5.1\n */\nexport let initialBaseURI = \n// @ts-ignore\ntypeof self !== \"undefined\" &&\n    self.location &&\n    self.location.origin !== \"null\"\n    ? //@ts-ignore\n        /* #__PURE__ */ new URL(self.location.origin + self.location.pathname + location.search)\n    : /* #__PURE__ */ new URL(\"https://github.com/cfworker\");\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = \"\") {\n    if (schema && typeof schema === \"object\" && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = \"\"; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n                if (basePointer === \"\") {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    // compute the schema's URI and add it to the mapping.\n    const schemaURI = baseURI.href + (basePointer ? \"#\" + basePointer : \"\");\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    // exit early if this is a boolean schema.\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    // set the schema's absolute URI.\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, \"__absolute_uri__\", {\n            enumerable: false,\n            value: schemaURI,\n        });\n    }\n    // if a $ref is found, resolve it's absolute URI.\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if a $recursiveRef is found, resolve it's absolute URI.\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_recursive_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if an $anchor is found, compute it's URI and add it to the mapping.\n    if (schema.$anchor) {\n        const url = new URL(\"#\" + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    // process subschemas.\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n// schema identification examples\n// https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.appendix.A\n// $ref delegation\n// https://github.com/json-schema-org/json-schema-spec/issues/514\n// output format\n// https://json-schema.org/draft/2019-09/json-schema-core.html#output\n// JSON pointer\n// https://tools.ietf.org/html/rfc6901\n// JSON relative pointer\n// https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n", "// based on https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\n// const URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n// date: http://tools.ietf.org/html/rfc3339#section-5.6\nconst FASTDATE = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/;\n// date-time: http://tools.ietf.org/html/rfc3339#section-5.6\nconst FASTTIME = /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst FASTDATETIME = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i;\n// uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n// const FASTURI = /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i;\nconst FASTURIREFERENCE = /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i;\n// https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split(\"@\");\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === \".\" || name.endsWith(\".\") || name.includes(\"..\"))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split(\".\")\n        .every((part) => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\n// optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\n// optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\n// https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const fullFormat = {\n    date,\n    time: /* #__PURE__ */ time.bind(undefined, false),\n    \"date-time\": date_time,\n    duration: DURATION,\n    uri,\n    \"uri-reference\": /* #__PURE__ */ bind(URIREF),\n    \"uri-template\": /* #__PURE__ */ bind(URITEMPLATE),\n    url: /* #__PURE__ */ bind(URL_),\n    email: EMAIL,\n    hostname: /* #__PURE__ */ bind(HOSTNAME),\n    ipv4: /* #__PURE__ */ bind(IPV4),\n    ipv6: /* #__PURE__ */ bind(IPV6),\n    regex: regex,\n    uuid: /* #__PURE__ */ bind(UUID),\n    \"json-pointer\": /* #__PURE__ */ bind(JSON_POINTER),\n    \"json-pointer-uri-fragment\": /* #__PURE__ */ bind(JSON_POINTER_URI_FRAGMENT),\n    \"relative-json-pointer\": /* #__PURE__ */ bind(RELATIVE_JSON_POINTER),\n};\nexport const fastFormat = {\n    ...fullFormat,\n    date: /* #__PURE__ */ bind(FASTDATE),\n    time: /* #__PURE__ */ bind(FASTTIME),\n    \"date-time\": /* #__PURE__ */ bind(FASTDATETIME),\n    \"uri-reference\": /* #__PURE__ */ bind(FASTURIREFERENCE),\n};\nfunction isLeapYear(year) {\n    // https://tools.ietf.org/html/rfc3339#appendix-C\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    // http://tools.ietf.org/html/rfc3339#section-5.6\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n", "import { BaseOutputParser } from \"./base.js\";\nimport { isBaseMessage, isBaseMessageChunk, } from \"../messages/base.js\";\nimport { convertToChunk } from \"../messages/utils.js\";\nimport { GenerationChunk, ChatGenerationChunk, } from \"../outputs.js\";\nimport { deepCompareStrict } from \"../utils/@cfworker/json-schema/index.js\";\n/**\n * Class to parse the output of an LLM call that also allows streaming inputs.\n */\nexport class BaseTransformOutputParser extends BaseOutputParser {\n    async *_transform(inputGenerator) {\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk === \"string\") {\n                yield this.parseResult([{ text: chunk }]);\n            }\n            else {\n                yield this.parseResult([\n                    {\n                        message: chunk,\n                        text: this._baseMessageToString(chunk),\n                    },\n                ]);\n            }\n        }\n    }\n    /**\n     * Transforms an asynchronous generator of input into an asynchronous\n     * generator of parsed output.\n     * @param inputGenerator An asynchronous generator of input.\n     * @param options A configuration object.\n     * @returns An asynchronous generator of parsed output.\n     */\n    async *transform(inputGenerator, options) {\n        yield* this._transformStreamWithConfig(inputGenerator, this._transform.bind(this), {\n            ...options,\n            runType: \"parser\",\n        });\n    }\n}\n/**\n * A base class for output parsers that can handle streaming input. It\n * extends the `BaseTransformOutputParser` class and provides a method for\n * converting parsed outputs into a diff format.\n */\nexport class BaseCumulativeTransformOutputParser extends BaseTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"diff\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.diff = fields?.diff ?? this.diff;\n    }\n    async *_transform(inputGenerator) {\n        let prevParsed;\n        let accGen;\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk !== \"string\" && typeof chunk.content !== \"string\") {\n                throw new Error(\"Cannot handle non-string output.\");\n            }\n            let chunkGen;\n            if (isBaseMessageChunk(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: chunk,\n                    text: chunk.content,\n                });\n            }\n            else if (isBaseMessage(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: convertToChunk(chunk),\n                    text: chunk.content,\n                });\n            }\n            else {\n                chunkGen = new GenerationChunk({ text: chunk });\n            }\n            if (accGen === undefined) {\n                accGen = chunkGen;\n            }\n            else {\n                accGen = accGen.concat(chunkGen);\n            }\n            const parsed = await this.parsePartialResult([accGen]);\n            if (parsed !== undefined &&\n                parsed !== null &&\n                !deepCompareStrict(parsed, prevParsed)) {\n                if (this.diff) {\n                    yield this._diff(prevParsed, parsed);\n                }\n                else {\n                    yield parsed;\n                }\n                prevParsed = parsed;\n            }\n        }\n    }\n}\n", "import { BaseTransformOutputParser } from \"./transform.js\";\n/**\n * OutputParser that parses LLMResult into the top likely string.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n *\n * const chain = RunnableSequence.from([\n *   promptTemplate,\n *   new ChatOpenAI({}),\n *   new StringOutputParser(),\n * ]);\n *\n * const result = await chain.invoke({ topic: \"bears\" });\n * console.log(\"What do you call a bear with no teeth? A gummy bear!\");\n * ```\n */\nexport class StringOutputParser extends BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"string\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"StrOutputParser\";\n    }\n    /**\n     * Parses a string output from an LLM call. This method is meant to be\n     * implemented by subclasses to define how a string output from an LLM\n     * should be parsed.\n     * @param text The string output from an LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n    _textContentToString(content) {\n        return content.text;\n    }\n    _imageUrlContentToString(_content) {\n        throw new Error(`Cannot coerce a multimodal \"image_url\" message part into a string.`);\n    }\n    _messageContentComplexToString(content) {\n        switch (content.type) {\n            case \"text\":\n                if (\"text\" in content) {\n                    // Type guard for MessageContentText\n                    return this._textContentToString(content);\n                }\n                break;\n            case \"image_url\":\n                if (\"image_url\" in content) {\n                    // Type guard for MessageContentImageUrl\n                    return this._imageUrlContentToString(content);\n                }\n                break;\n            default:\n                throw new Error(`Cannot coerce \"${content.type}\" message part into a string.`);\n        }\n        throw new Error(`Invalid content type: ${content.type}`);\n    }\n    _baseMessageContentToString(content) {\n        return content.reduce((acc, item) => acc + this._messageContentComplexToString(item), \"\");\n    }\n}\n", "// @ts-nocheck\n// Inlined to deal with portability issues\n// Originally from: https://github.com/isaacs/sax-js\nconst initializeSax = function () {\n    const sax = {};\n    sax.parser = function (strict, opt) {\n        return new SAXParser(strict, opt);\n    };\n    sax.SAXParser = SAXParser;\n    sax.SAXStream = SAXStream;\n    sax.createStream = createStream;\n    // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n    // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n    // since that's the earliest that a buffer overrun could occur.  This way, checks are\n    // as rare as required, but as often as necessary to ensure never crossing this bound.\n    // Furthermore, buffers are only tested at most once per write(), so passing a very\n    // large string into write() might have undesirable effects, but this is manageable by\n    // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n    // edge case, result in creating at most one complete copy of the string passed in.\n    // Set to Infinity to have unlimited buffers.\n    sax.MAX_BUFFER_LENGTH = 64 * 1024;\n    const buffers = [\n        \"comment\",\n        \"sgmlDecl\",\n        \"textNode\",\n        \"tagName\",\n        \"doctype\",\n        \"procInstName\",\n        \"procInstBody\",\n        \"entity\",\n        \"attribName\",\n        \"attribValue\",\n        \"cdata\",\n        \"script\",\n    ];\n    sax.EVENTS = [\n        \"text\",\n        \"processinginstruction\",\n        \"sgmldeclaration\",\n        \"doctype\",\n        \"comment\",\n        \"opentagstart\",\n        \"attribute\",\n        \"opentag\",\n        \"closetag\",\n        \"opencdata\",\n        \"cdata\",\n        \"closecdata\",\n        \"error\",\n        \"end\",\n        \"ready\",\n        \"script\",\n        \"opennamespace\",\n        \"closenamespace\",\n    ];\n    function SAXParser(strict, opt) {\n        if (!(this instanceof SAXParser)) {\n            return new SAXParser(strict, opt);\n        }\n        var parser = this;\n        clearBuffers(parser);\n        parser.q = parser.c = \"\";\n        parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH;\n        parser.opt = opt || {};\n        parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags;\n        parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\";\n        parser.tags = [];\n        parser.closed = parser.closedRoot = parser.sawRoot = false;\n        parser.tag = parser.error = null;\n        parser.strict = !!strict;\n        parser.noscript = !!(strict || parser.opt.noscript);\n        parser.state = S.BEGIN;\n        parser.strictEntities = parser.opt.strictEntities;\n        parser.ENTITIES = parser.strictEntities\n            ? Object.create(sax.XML_ENTITIES)\n            : Object.create(sax.ENTITIES);\n        parser.attribList = [];\n        // namespaces form a prototype chain.\n        // it always points at the current tag,\n        // which protos to its parent tag.\n        if (parser.opt.xmlns) {\n            parser.ns = Object.create(rootNS);\n        }\n        // mostly just for error reporting\n        parser.trackPosition = parser.opt.position !== false;\n        if (parser.trackPosition) {\n            parser.position = parser.line = parser.column = 0;\n        }\n        emit(parser, \"onready\");\n    }\n    if (!Object.create) {\n        Object.create = function (o) {\n            function F() { }\n            F.prototype = o;\n            var newf = new F();\n            return newf;\n        };\n    }\n    if (!Object.keys) {\n        Object.keys = function (o) {\n            var a = [];\n            for (var i in o)\n                if (o.hasOwnProperty(i))\n                    a.push(i);\n            return a;\n        };\n    }\n    function checkBufferLength(parser) {\n        var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10);\n        var maxActual = 0;\n        for (var i = 0, l = buffers.length; i < l; i++) {\n            var len = parser[buffers[i]].length;\n            if (len > maxAllowed) {\n                // Text/cdata nodes can get big, and since they're buffered,\n                // we can get here under normal conditions.\n                // Avoid issues by emitting the text node now,\n                // so at least it won't get any bigger.\n                switch (buffers[i]) {\n                    case \"textNode\":\n                        closeText(parser);\n                        break;\n                    case \"cdata\":\n                        emitNode(parser, \"oncdata\", parser.cdata);\n                        parser.cdata = \"\";\n                        break;\n                    case \"script\":\n                        emitNode(parser, \"onscript\", parser.script);\n                        parser.script = \"\";\n                        break;\n                    default:\n                        error(parser, \"Max buffer length exceeded: \" + buffers[i]);\n                }\n            }\n            maxActual = Math.max(maxActual, len);\n        }\n        // schedule the next check for the earliest possible buffer overrun.\n        var m = sax.MAX_BUFFER_LENGTH - maxActual;\n        parser.bufferCheckPosition = m + parser.position;\n    }\n    function clearBuffers(parser) {\n        for (var i = 0, l = buffers.length; i < l; i++) {\n            parser[buffers[i]] = \"\";\n        }\n    }\n    function flushBuffers(parser) {\n        closeText(parser);\n        if (parser.cdata !== \"\") {\n            emitNode(parser, \"oncdata\", parser.cdata);\n            parser.cdata = \"\";\n        }\n        if (parser.script !== \"\") {\n            emitNode(parser, \"onscript\", parser.script);\n            parser.script = \"\";\n        }\n    }\n    SAXParser.prototype = {\n        end: function () {\n            end(this);\n        },\n        write: write,\n        resume: function () {\n            this.error = null;\n            return this;\n        },\n        close: function () {\n            return this.write(null);\n        },\n        flush: function () {\n            flushBuffers(this);\n        },\n    };\n    var Stream = ReadableStream;\n    if (!Stream)\n        Stream = function () { };\n    var streamWraps = sax.EVENTS.filter(function (ev) {\n        return ev !== \"error\" && ev !== \"end\";\n    });\n    function createStream(strict, opt) {\n        return new SAXStream(strict, opt);\n    }\n    function SAXStream(strict, opt) {\n        if (!(this instanceof SAXStream)) {\n            return new SAXStream(strict, opt);\n        }\n        Stream.apply(this);\n        this._parser = new SAXParser(strict, opt);\n        this.writable = true;\n        this.readable = true;\n        var me = this;\n        this._parser.onend = function () {\n            me.emit(\"end\");\n        };\n        this._parser.onerror = function (er) {\n            me.emit(\"error\", er);\n            // if didn't throw, then means error was handled.\n            // go ahead and clear error, so we can write again.\n            me._parser.error = null;\n        };\n        this._decoder = null;\n        streamWraps.forEach(function (ev) {\n            Object.defineProperty(me, \"on\" + ev, {\n                get: function () {\n                    return me._parser[\"on\" + ev];\n                },\n                set: function (h) {\n                    if (!h) {\n                        me.removeAllListeners(ev);\n                        me._parser[\"on\" + ev] = h;\n                        return h;\n                    }\n                    me.on(ev, h);\n                },\n                enumerable: true,\n                configurable: false,\n            });\n        });\n    }\n    SAXStream.prototype = Object.create(Stream.prototype, {\n        constructor: {\n            value: SAXStream,\n        },\n    });\n    SAXStream.prototype.write = function (data) {\n        this._parser.write(data.toString());\n        this.emit(\"data\", data);\n        return true;\n    };\n    SAXStream.prototype.end = function (chunk) {\n        if (chunk && chunk.length) {\n            this.write(chunk);\n        }\n        this._parser.end();\n        return true;\n    };\n    SAXStream.prototype.on = function (ev, handler) {\n        var me = this;\n        if (!me._parser[\"on\" + ev] && streamWraps.indexOf(ev) !== -1) {\n            me._parser[\"on\" + ev] = function () {\n                var args = arguments.length === 1\n                    ? [arguments[0]]\n                    : Array.apply(null, arguments);\n                args.splice(0, 0, ev);\n                me.emit.apply(me, args);\n            };\n        }\n        return Stream.prototype.on.call(me, ev, handler);\n    };\n    // this really needs to be replaced with character classes.\n    // XML allows all manner of ridiculous numbers and digits.\n    var CDATA = \"[CDATA[\";\n    var DOCTYPE = \"DOCTYPE\";\n    var XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n    var XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n    var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE };\n    // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n    // This implementation works on strings, a single character at a time\n    // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n    // without a significant breaking change to either this  parser, or the\n    // JavaScript language.  Implementation of an emoji-capable xml parser\n    // is left as an exercise for the reader.\n    var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    function isWhitespace(c) {\n        return c === \" \" || c === \"\\n\" || c === \"\\r\" || c === \"\\t\";\n    }\n    function isQuote(c) {\n        return c === '\"' || c === \"'\";\n    }\n    function isAttribEnd(c) {\n        return c === \">\" || isWhitespace(c);\n    }\n    function isMatch(regex, c) {\n        return regex.test(c);\n    }\n    function notMatch(regex, c) {\n        return !isMatch(regex, c);\n    }\n    var S = 0;\n    sax.STATE = {\n        BEGIN: S++,\n        BEGIN_WHITESPACE: S++,\n        TEXT: S++,\n        TEXT_ENTITY: S++,\n        OPEN_WAKA: S++,\n        SGML_DECL: S++,\n        SGML_DECL_QUOTED: S++,\n        DOCTYPE: S++,\n        DOCTYPE_QUOTED: S++,\n        DOCTYPE_DTD: S++,\n        DOCTYPE_DTD_QUOTED: S++,\n        COMMENT_STARTING: S++,\n        COMMENT: S++,\n        COMMENT_ENDING: S++,\n        COMMENT_ENDED: S++,\n        CDATA: S++,\n        CDATA_ENDING: S++,\n        CDATA_ENDING_2: S++,\n        PROC_INST: S++,\n        PROC_INST_BODY: S++,\n        PROC_INST_ENDING: S++,\n        OPEN_TAG: S++,\n        OPEN_TAG_SLASH: S++,\n        ATTRIB: S++,\n        ATTRIB_NAME: S++,\n        ATTRIB_NAME_SAW_WHITE: S++,\n        ATTRIB_VALUE: S++,\n        ATTRIB_VALUE_QUOTED: S++,\n        ATTRIB_VALUE_CLOSED: S++,\n        ATTRIB_VALUE_UNQUOTED: S++,\n        ATTRIB_VALUE_ENTITY_Q: S++,\n        ATTRIB_VALUE_ENTITY_U: S++,\n        CLOSE_TAG: S++,\n        CLOSE_TAG_SAW_WHITE: S++,\n        SCRIPT: S++,\n        SCRIPT_ENDING: S++, // <script> ... <\n    };\n    sax.XML_ENTITIES = {\n        amp: \"&\",\n        gt: \">\",\n        lt: \"<\",\n        quot: '\"',\n        apos: \"'\",\n    };\n    sax.ENTITIES = {\n        amp: \"&\",\n        gt: \">\",\n        lt: \"<\",\n        quot: '\"',\n        apos: \"'\",\n        AElig: 198,\n        Aacute: 193,\n        Acirc: 194,\n        Agrave: 192,\n        Aring: 197,\n        Atilde: 195,\n        Auml: 196,\n        Ccedil: 199,\n        ETH: 208,\n        Eacute: 201,\n        Ecirc: 202,\n        Egrave: 200,\n        Euml: 203,\n        Iacute: 205,\n        Icirc: 206,\n        Igrave: 204,\n        Iuml: 207,\n        Ntilde: 209,\n        Oacute: 211,\n        Ocirc: 212,\n        Ograve: 210,\n        Oslash: 216,\n        Otilde: 213,\n        Ouml: 214,\n        THORN: 222,\n        Uacute: 218,\n        Ucirc: 219,\n        Ugrave: 217,\n        Uuml: 220,\n        Yacute: 221,\n        aacute: 225,\n        acirc: 226,\n        aelig: 230,\n        agrave: 224,\n        aring: 229,\n        atilde: 227,\n        auml: 228,\n        ccedil: 231,\n        eacute: 233,\n        ecirc: 234,\n        egrave: 232,\n        eth: 240,\n        euml: 235,\n        iacute: 237,\n        icirc: 238,\n        igrave: 236,\n        iuml: 239,\n        ntilde: 241,\n        oacute: 243,\n        ocirc: 244,\n        ograve: 242,\n        oslash: 248,\n        otilde: 245,\n        ouml: 246,\n        szlig: 223,\n        thorn: 254,\n        uacute: 250,\n        ucirc: 251,\n        ugrave: 249,\n        uuml: 252,\n        yacute: 253,\n        yuml: 255,\n        copy: 169,\n        reg: 174,\n        nbsp: 160,\n        iexcl: 161,\n        cent: 162,\n        pound: 163,\n        curren: 164,\n        yen: 165,\n        brvbar: 166,\n        sect: 167,\n        uml: 168,\n        ordf: 170,\n        laquo: 171,\n        not: 172,\n        shy: 173,\n        macr: 175,\n        deg: 176,\n        plusmn: 177,\n        sup1: 185,\n        sup2: 178,\n        sup3: 179,\n        acute: 180,\n        micro: 181,\n        para: 182,\n        middot: 183,\n        cedil: 184,\n        ordm: 186,\n        raquo: 187,\n        frac14: 188,\n        frac12: 189,\n        frac34: 190,\n        iquest: 191,\n        times: 215,\n        divide: 247,\n        OElig: 338,\n        oelig: 339,\n        Scaron: 352,\n        scaron: 353,\n        Yuml: 376,\n        fnof: 402,\n        circ: 710,\n        tilde: 732,\n        Alpha: 913,\n        Beta: 914,\n        Gamma: 915,\n        Delta: 916,\n        Epsilon: 917,\n        Zeta: 918,\n        Eta: 919,\n        Theta: 920,\n        Iota: 921,\n        Kappa: 922,\n        Lambda: 923,\n        Mu: 924,\n        Nu: 925,\n        Xi: 926,\n        Omicron: 927,\n        Pi: 928,\n        Rho: 929,\n        Sigma: 931,\n        Tau: 932,\n        Upsilon: 933,\n        Phi: 934,\n        Chi: 935,\n        Psi: 936,\n        Omega: 937,\n        alpha: 945,\n        beta: 946,\n        gamma: 947,\n        delta: 948,\n        epsilon: 949,\n        zeta: 950,\n        eta: 951,\n        theta: 952,\n        iota: 953,\n        kappa: 954,\n        lambda: 955,\n        mu: 956,\n        nu: 957,\n        xi: 958,\n        omicron: 959,\n        pi: 960,\n        rho: 961,\n        sigmaf: 962,\n        sigma: 963,\n        tau: 964,\n        upsilon: 965,\n        phi: 966,\n        chi: 967,\n        psi: 968,\n        omega: 969,\n        thetasym: 977,\n        upsih: 978,\n        piv: 982,\n        ensp: 8194,\n        emsp: 8195,\n        thinsp: 8201,\n        zwnj: 8204,\n        zwj: 8205,\n        lrm: 8206,\n        rlm: 8207,\n        ndash: 8211,\n        mdash: 8212,\n        lsquo: 8216,\n        rsquo: 8217,\n        sbquo: 8218,\n        ldquo: 8220,\n        rdquo: 8221,\n        bdquo: 8222,\n        dagger: 8224,\n        Dagger: 8225,\n        bull: 8226,\n        hellip: 8230,\n        permil: 8240,\n        prime: 8242,\n        Prime: 8243,\n        lsaquo: 8249,\n        rsaquo: 8250,\n        oline: 8254,\n        frasl: 8260,\n        euro: 8364,\n        image: 8465,\n        weierp: 8472,\n        real: 8476,\n        trade: 8482,\n        alefsym: 8501,\n        larr: 8592,\n        uarr: 8593,\n        rarr: 8594,\n        darr: 8595,\n        harr: 8596,\n        crarr: 8629,\n        lArr: 8656,\n        uArr: 8657,\n        rArr: 8658,\n        dArr: 8659,\n        hArr: 8660,\n        forall: 8704,\n        part: 8706,\n        exist: 8707,\n        empty: 8709,\n        nabla: 8711,\n        isin: 8712,\n        notin: 8713,\n        ni: 8715,\n        prod: 8719,\n        sum: 8721,\n        minus: 8722,\n        lowast: 8727,\n        radic: 8730,\n        prop: 8733,\n        infin: 8734,\n        ang: 8736,\n        and: 8743,\n        or: 8744,\n        cap: 8745,\n        cup: 8746,\n        int: 8747,\n        there4: 8756,\n        sim: 8764,\n        cong: 8773,\n        asymp: 8776,\n        ne: 8800,\n        equiv: 8801,\n        le: 8804,\n        ge: 8805,\n        sub: 8834,\n        sup: 8835,\n        nsub: 8836,\n        sube: 8838,\n        supe: 8839,\n        oplus: 8853,\n        otimes: 8855,\n        perp: 8869,\n        sdot: 8901,\n        lceil: 8968,\n        rceil: 8969,\n        lfloor: 8970,\n        rfloor: 8971,\n        lang: 9001,\n        rang: 9002,\n        loz: 9674,\n        spades: 9824,\n        clubs: 9827,\n        hearts: 9829,\n        diams: 9830,\n    };\n    Object.keys(sax.ENTITIES).forEach(function (key) {\n        var e = sax.ENTITIES[key];\n        var s = typeof e === \"number\" ? String.fromCharCode(e) : e;\n        sax.ENTITIES[key] = s;\n    });\n    for (var s in sax.STATE) {\n        sax.STATE[sax.STATE[s]] = s;\n    }\n    // shorthand\n    S = sax.STATE;\n    function emit(parser, event, data) {\n        parser[event] && parser[event](data);\n    }\n    function emitNode(parser, nodeType, data) {\n        if (parser.textNode)\n            closeText(parser);\n        emit(parser, nodeType, data);\n    }\n    function closeText(parser) {\n        parser.textNode = textopts(parser.opt, parser.textNode);\n        if (parser.textNode)\n            emit(parser, \"ontext\", parser.textNode);\n        parser.textNode = \"\";\n    }\n    function textopts(opt, text) {\n        if (opt.trim)\n            text = text.trim();\n        if (opt.normalize)\n            text = text.replace(/\\s+/g, \" \");\n        return text;\n    }\n    function error(parser, er) {\n        closeText(parser);\n        if (parser.trackPosition) {\n            er +=\n                \"\\nLine: \" +\n                    parser.line +\n                    \"\\nColumn: \" +\n                    parser.column +\n                    \"\\nChar: \" +\n                    parser.c;\n        }\n        er = new Error(er);\n        parser.error = er;\n        emit(parser, \"onerror\", er);\n        return parser;\n    }\n    function end(parser) {\n        if (parser.sawRoot && !parser.closedRoot)\n            strictFail(parser, \"Unclosed root tag\");\n        if (parser.state !== S.BEGIN &&\n            parser.state !== S.BEGIN_WHITESPACE &&\n            parser.state !== S.TEXT) {\n            error(parser, \"Unexpected end\");\n        }\n        closeText(parser);\n        parser.c = \"\";\n        parser.closed = true;\n        emit(parser, \"onend\");\n        SAXParser.call(parser, parser.strict, parser.opt);\n        return parser;\n    }\n    function strictFail(parser, message) {\n        if (typeof parser !== \"object\" || !(parser instanceof SAXParser)) {\n            throw new Error(\"bad call to strictFail\");\n        }\n        if (parser.strict) {\n            error(parser, message);\n        }\n    }\n    function newTag(parser) {\n        if (!parser.strict)\n            parser.tagName = parser.tagName[parser.looseCase]();\n        var parent = parser.tags[parser.tags.length - 1] || parser;\n        var tag = (parser.tag = { name: parser.tagName, attributes: {} });\n        // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n        if (parser.opt.xmlns) {\n            tag.ns = parent.ns;\n        }\n        parser.attribList.length = 0;\n        emitNode(parser, \"onopentagstart\", tag);\n    }\n    function qname(name, attribute) {\n        var i = name.indexOf(\":\");\n        var qualName = i < 0 ? [\"\", name] : name.split(\":\");\n        var prefix = qualName[0];\n        var local = qualName[1];\n        // <x \"xmlns\"=\"http://foo\">\n        if (attribute && name === \"xmlns\") {\n            prefix = \"xmlns\";\n            local = \"\";\n        }\n        return { prefix: prefix, local: local };\n    }\n    function attrib(parser) {\n        if (!parser.strict) {\n            parser.attribName = parser.attribName[parser.looseCase]();\n        }\n        if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n            parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n            parser.attribName = parser.attribValue = \"\";\n            return;\n        }\n        if (parser.opt.xmlns) {\n            var qn = qname(parser.attribName, true);\n            var prefix = qn.prefix;\n            var local = qn.local;\n            if (prefix === \"xmlns\") {\n                // namespace binding attribute. push the binding into scope\n                if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n                    strictFail(parser, \"xml: prefix must be bound to \" +\n                        XML_NAMESPACE +\n                        \"\\n\" +\n                        \"Actual: \" +\n                        parser.attribValue);\n                }\n                else if (local === \"xmlns\" &&\n                    parser.attribValue !== XMLNS_NAMESPACE) {\n                    strictFail(parser, \"xmlns: prefix must be bound to \" +\n                        XMLNS_NAMESPACE +\n                        \"\\n\" +\n                        \"Actual: \" +\n                        parser.attribValue);\n                }\n                else {\n                    var tag = parser.tag;\n                    var parent = parser.tags[parser.tags.length - 1] || parser;\n                    if (tag.ns === parent.ns) {\n                        tag.ns = Object.create(parent.ns);\n                    }\n                    tag.ns[local] = parser.attribValue;\n                }\n            }\n            // defer onattribute events until all attributes have been seen\n            // so any new bindings can take effect. preserve attribute order\n            // so deferred events can be emitted in document order\n            parser.attribList.push([parser.attribName, parser.attribValue]);\n        }\n        else {\n            // in non-xmlns mode, we can emit the event right away\n            parser.tag.attributes[parser.attribName] = parser.attribValue;\n            emitNode(parser, \"onattribute\", {\n                name: parser.attribName,\n                value: parser.attribValue,\n            });\n        }\n        parser.attribName = parser.attribValue = \"\";\n    }\n    function openTag(parser, selfClosing) {\n        if (parser.opt.xmlns) {\n            // emit namespace binding events\n            var tag = parser.tag;\n            // add namespace info to tag\n            var qn = qname(parser.tagName);\n            tag.prefix = qn.prefix;\n            tag.local = qn.local;\n            tag.uri = tag.ns[qn.prefix] || \"\";\n            if (tag.prefix && !tag.uri) {\n                strictFail(parser, \"Unbound namespace prefix: \" + JSON.stringify(parser.tagName));\n                tag.uri = qn.prefix;\n            }\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n            if (tag.ns && parent.ns !== tag.ns) {\n                Object.keys(tag.ns).forEach(function (p) {\n                    emitNode(parser, \"onopennamespace\", {\n                        prefix: p,\n                        uri: tag.ns[p],\n                    });\n                });\n            }\n            // handle deferred onattribute events\n            // Note: do not apply default ns to attributes:\n            //   http://www.w3.org/TR/REC-xml-names/#defaulting\n            for (var i = 0, l = parser.attribList.length; i < l; i++) {\n                var nv = parser.attribList[i];\n                var name = nv[0];\n                var value = nv[1];\n                var qualName = qname(name, true);\n                var prefix = qualName.prefix;\n                var local = qualName.local;\n                var uri = prefix === \"\" ? \"\" : tag.ns[prefix] || \"\";\n                var a = {\n                    name: name,\n                    value: value,\n                    prefix: prefix,\n                    local: local,\n                    uri: uri,\n                };\n                // if there's any attributes with an undefined namespace,\n                // then fail on them now.\n                if (prefix && prefix !== \"xmlns\" && !uri) {\n                    strictFail(parser, \"Unbound namespace prefix: \" + JSON.stringify(prefix));\n                    a.uri = prefix;\n                }\n                parser.tag.attributes[name] = a;\n                emitNode(parser, \"onattribute\", a);\n            }\n            parser.attribList.length = 0;\n        }\n        parser.tag.isSelfClosing = !!selfClosing;\n        // process the tag\n        parser.sawRoot = true;\n        parser.tags.push(parser.tag);\n        emitNode(parser, \"onopentag\", parser.tag);\n        if (!selfClosing) {\n            // special case for <script> in non-strict mode.\n            if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n                parser.state = S.SCRIPT;\n            }\n            else {\n                parser.state = S.TEXT;\n            }\n            parser.tag = null;\n            parser.tagName = \"\";\n        }\n        parser.attribName = parser.attribValue = \"\";\n        parser.attribList.length = 0;\n    }\n    function closeTag(parser) {\n        if (!parser.tagName) {\n            strictFail(parser, \"Weird empty close tag.\");\n            parser.textNode += \"</>\";\n            parser.state = S.TEXT;\n            return;\n        }\n        if (parser.script) {\n            if (parser.tagName !== \"script\") {\n                parser.script += \"</\" + parser.tagName + \">\";\n                parser.tagName = \"\";\n                parser.state = S.SCRIPT;\n                return;\n            }\n            emitNode(parser, \"onscript\", parser.script);\n            parser.script = \"\";\n        }\n        // first make sure that the closing tag actually exists.\n        // <a><b></c></b></a> will close everything, otherwise.\n        var t = parser.tags.length;\n        var tagName = parser.tagName;\n        if (!parser.strict) {\n            tagName = tagName[parser.looseCase]();\n        }\n        var closeTo = tagName;\n        while (t--) {\n            var close = parser.tags[t];\n            if (close.name !== closeTo) {\n                // fail the first time in strict mode\n                strictFail(parser, \"Unexpected close tag\");\n            }\n            else {\n                break;\n            }\n        }\n        // didn't find it.  we already failed for strict, so just abort.\n        if (t < 0) {\n            strictFail(parser, \"Unmatched closing tag: \" + parser.tagName);\n            parser.textNode += \"</\" + parser.tagName + \">\";\n            parser.state = S.TEXT;\n            return;\n        }\n        parser.tagName = tagName;\n        var s = parser.tags.length;\n        while (s-- > t) {\n            var tag = (parser.tag = parser.tags.pop());\n            parser.tagName = parser.tag.name;\n            emitNode(parser, \"onclosetag\", parser.tagName);\n            var x = {};\n            for (var i in tag.ns) {\n                x[i] = tag.ns[i];\n            }\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n            if (parser.opt.xmlns && tag.ns !== parent.ns) {\n                // remove namespace bindings introduced by tag\n                Object.keys(tag.ns).forEach(function (p) {\n                    var n = tag.ns[p];\n                    emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n });\n                });\n            }\n        }\n        if (t === 0)\n            parser.closedRoot = true;\n        parser.tagName = parser.attribValue = parser.attribName = \"\";\n        parser.attribList.length = 0;\n        parser.state = S.TEXT;\n    }\n    function parseEntity(parser) {\n        var entity = parser.entity;\n        var entityLC = entity.toLowerCase();\n        var num;\n        var numStr = \"\";\n        if (parser.ENTITIES[entity]) {\n            return parser.ENTITIES[entity];\n        }\n        if (parser.ENTITIES[entityLC]) {\n            return parser.ENTITIES[entityLC];\n        }\n        entity = entityLC;\n        if (entity.charAt(0) === \"#\") {\n            if (entity.charAt(1) === \"x\") {\n                entity = entity.slice(2);\n                num = parseInt(entity, 16);\n                numStr = num.toString(16);\n            }\n            else {\n                entity = entity.slice(1);\n                num = parseInt(entity, 10);\n                numStr = num.toString(10);\n            }\n        }\n        entity = entity.replace(/^0+/, \"\");\n        if (isNaN(num) || numStr.toLowerCase() !== entity) {\n            strictFail(parser, \"Invalid character entity\");\n            return \"&\" + parser.entity + \";\";\n        }\n        return String.fromCodePoint(num);\n    }\n    function beginWhiteSpace(parser, c) {\n        if (c === \"<\") {\n            parser.state = S.OPEN_WAKA;\n            parser.startTagPosition = parser.position;\n        }\n        else if (!isWhitespace(c)) {\n            // have to process this as a text node.\n            // weird, but happens.\n            strictFail(parser, \"Non-whitespace before first tag.\");\n            parser.textNode = c;\n            parser.state = S.TEXT;\n        }\n    }\n    function charAt(chunk, i) {\n        var result = \"\";\n        if (i < chunk.length) {\n            result = chunk.charAt(i);\n        }\n        return result;\n    }\n    function write(chunk) {\n        var parser = this;\n        if (this.error) {\n            throw this.error;\n        }\n        if (parser.closed) {\n            return error(parser, \"Cannot write after close. Assign an onready handler.\");\n        }\n        if (chunk === null) {\n            return end(parser);\n        }\n        if (typeof chunk === \"object\") {\n            chunk = chunk.toString();\n        }\n        var i = 0;\n        var c = \"\";\n        while (true) {\n            c = charAt(chunk, i++);\n            parser.c = c;\n            if (!c) {\n                break;\n            }\n            if (parser.trackPosition) {\n                parser.position++;\n                if (c === \"\\n\") {\n                    parser.line++;\n                    parser.column = 0;\n                }\n                else {\n                    parser.column++;\n                }\n            }\n            switch (parser.state) {\n                case S.BEGIN:\n                    parser.state = S.BEGIN_WHITESPACE;\n                    if (c === \"\\uFEFF\") {\n                        continue;\n                    }\n                    beginWhiteSpace(parser, c);\n                    continue;\n                case S.BEGIN_WHITESPACE:\n                    beginWhiteSpace(parser, c);\n                    continue;\n                case S.TEXT:\n                    if (parser.sawRoot && !parser.closedRoot) {\n                        var starti = i - 1;\n                        while (c && c !== \"<\" && c !== \"&\") {\n                            c = charAt(chunk, i++);\n                            if (c && parser.trackPosition) {\n                                parser.position++;\n                                if (c === \"\\n\") {\n                                    parser.line++;\n                                    parser.column = 0;\n                                }\n                                else {\n                                    parser.column++;\n                                }\n                            }\n                        }\n                        parser.textNode += chunk.substring(starti, i - 1);\n                    }\n                    if (c === \"<\" &&\n                        !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n                        parser.state = S.OPEN_WAKA;\n                        parser.startTagPosition = parser.position;\n                    }\n                    else {\n                        if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n                            strictFail(parser, \"Text data outside of root node.\");\n                        }\n                        if (c === \"&\") {\n                            parser.state = S.TEXT_ENTITY;\n                        }\n                        else {\n                            parser.textNode += c;\n                        }\n                    }\n                    continue;\n                case S.SCRIPT:\n                    // only non-strict\n                    if (c === \"<\") {\n                        parser.state = S.SCRIPT_ENDING;\n                    }\n                    else {\n                        parser.script += c;\n                    }\n                    continue;\n                case S.SCRIPT_ENDING:\n                    if (c === \"/\") {\n                        parser.state = S.CLOSE_TAG;\n                    }\n                    else {\n                        parser.script += \"<\" + c;\n                        parser.state = S.SCRIPT;\n                    }\n                    continue;\n                case S.OPEN_WAKA:\n                    // either a /, ?, !, or text is coming next.\n                    if (c === \"!\") {\n                        parser.state = S.SGML_DECL;\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if (isWhitespace(c)) {\n                        // wait for it...\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        parser.state = S.OPEN_TAG;\n                        parser.tagName = c;\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.CLOSE_TAG;\n                        parser.tagName = \"\";\n                    }\n                    else if (c === \"?\") {\n                        parser.state = S.PROC_INST;\n                        parser.procInstName = parser.procInstBody = \"\";\n                    }\n                    else {\n                        strictFail(parser, \"Unencoded <\");\n                        // if there was some whitespace, then add that in.\n                        if (parser.startTagPosition + 1 < parser.position) {\n                            var pad = parser.position - parser.startTagPosition;\n                            c = new Array(pad).join(\" \") + c;\n                        }\n                        parser.textNode += \"<\" + c;\n                        parser.state = S.TEXT;\n                    }\n                    continue;\n                case S.SGML_DECL:\n                    if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n                        emitNode(parser, \"onopencdata\");\n                        parser.state = S.CDATA;\n                        parser.sgmlDecl = \"\";\n                        parser.cdata = \"\";\n                    }\n                    else if (parser.sgmlDecl + c === \"--\") {\n                        parser.state = S.COMMENT;\n                        parser.comment = \"\";\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n                        parser.state = S.DOCTYPE;\n                        if (parser.doctype || parser.sawRoot) {\n                            strictFail(parser, \"Inappropriately located doctype declaration\");\n                        }\n                        parser.doctype = \"\";\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if (c === \">\") {\n                        emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl);\n                        parser.sgmlDecl = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else if (isQuote(c)) {\n                        parser.state = S.SGML_DECL_QUOTED;\n                        parser.sgmlDecl += c;\n                    }\n                    else {\n                        parser.sgmlDecl += c;\n                    }\n                    continue;\n                case S.SGML_DECL_QUOTED:\n                    if (c === parser.q) {\n                        parser.state = S.SGML_DECL;\n                        parser.q = \"\";\n                    }\n                    parser.sgmlDecl += c;\n                    continue;\n                case S.DOCTYPE:\n                    if (c === \">\") {\n                        parser.state = S.TEXT;\n                        emitNode(parser, \"ondoctype\", parser.doctype);\n                        parser.doctype = true; // just remember that we saw it.\n                    }\n                    else {\n                        parser.doctype += c;\n                        if (c === \"[\") {\n                            parser.state = S.DOCTYPE_DTD;\n                        }\n                        else if (isQuote(c)) {\n                            parser.state = S.DOCTYPE_QUOTED;\n                            parser.q = c;\n                        }\n                    }\n                    continue;\n                case S.DOCTYPE_QUOTED:\n                    parser.doctype += c;\n                    if (c === parser.q) {\n                        parser.q = \"\";\n                        parser.state = S.DOCTYPE;\n                    }\n                    continue;\n                case S.DOCTYPE_DTD:\n                    parser.doctype += c;\n                    if (c === \"]\") {\n                        parser.state = S.DOCTYPE;\n                    }\n                    else if (isQuote(c)) {\n                        parser.state = S.DOCTYPE_DTD_QUOTED;\n                        parser.q = c;\n                    }\n                    continue;\n                case S.DOCTYPE_DTD_QUOTED:\n                    parser.doctype += c;\n                    if (c === parser.q) {\n                        parser.state = S.DOCTYPE_DTD;\n                        parser.q = \"\";\n                    }\n                    continue;\n                case S.COMMENT:\n                    if (c === \"-\") {\n                        parser.state = S.COMMENT_ENDING;\n                    }\n                    else {\n                        parser.comment += c;\n                    }\n                    continue;\n                case S.COMMENT_ENDING:\n                    if (c === \"-\") {\n                        parser.state = S.COMMENT_ENDED;\n                        parser.comment = textopts(parser.opt, parser.comment);\n                        if (parser.comment) {\n                            emitNode(parser, \"oncomment\", parser.comment);\n                        }\n                        parser.comment = \"\";\n                    }\n                    else {\n                        parser.comment += \"-\" + c;\n                        parser.state = S.COMMENT;\n                    }\n                    continue;\n                case S.COMMENT_ENDED:\n                    if (c !== \">\") {\n                        strictFail(parser, \"Malformed comment\");\n                        // allow <!-- blah -- bloo --> in non-strict mode,\n                        // which is a comment of \" blah -- bloo \"\n                        parser.comment += \"--\" + c;\n                        parser.state = S.COMMENT;\n                    }\n                    else {\n                        parser.state = S.TEXT;\n                    }\n                    continue;\n                case S.CDATA:\n                    if (c === \"]\") {\n                        parser.state = S.CDATA_ENDING;\n                    }\n                    else {\n                        parser.cdata += c;\n                    }\n                    continue;\n                case S.CDATA_ENDING:\n                    if (c === \"]\") {\n                        parser.state = S.CDATA_ENDING_2;\n                    }\n                    else {\n                        parser.cdata += \"]\" + c;\n                        parser.state = S.CDATA;\n                    }\n                    continue;\n                case S.CDATA_ENDING_2:\n                    if (c === \">\") {\n                        if (parser.cdata) {\n                            emitNode(parser, \"oncdata\", parser.cdata);\n                        }\n                        emitNode(parser, \"onclosecdata\");\n                        parser.cdata = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else if (c === \"]\") {\n                        parser.cdata += \"]\";\n                    }\n                    else {\n                        parser.cdata += \"]]\" + c;\n                        parser.state = S.CDATA;\n                    }\n                    continue;\n                case S.PROC_INST:\n                    if (c === \"?\") {\n                        parser.state = S.PROC_INST_ENDING;\n                    }\n                    else if (isWhitespace(c)) {\n                        parser.state = S.PROC_INST_BODY;\n                    }\n                    else {\n                        parser.procInstName += c;\n                    }\n                    continue;\n                case S.PROC_INST_BODY:\n                    if (!parser.procInstBody && isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === \"?\") {\n                        parser.state = S.PROC_INST_ENDING;\n                    }\n                    else {\n                        parser.procInstBody += c;\n                    }\n                    continue;\n                case S.PROC_INST_ENDING:\n                    if (c === \">\") {\n                        emitNode(parser, \"onprocessinginstruction\", {\n                            name: parser.procInstName,\n                            body: parser.procInstBody,\n                        });\n                        parser.procInstName = parser.procInstBody = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else {\n                        parser.procInstBody += \"?\" + c;\n                        parser.state = S.PROC_INST_BODY;\n                    }\n                    continue;\n                case S.OPEN_TAG:\n                    if (isMatch(nameBody, c)) {\n                        parser.tagName += c;\n                    }\n                    else {\n                        newTag(parser);\n                        if (c === \">\") {\n                            openTag(parser);\n                        }\n                        else if (c === \"/\") {\n                            parser.state = S.OPEN_TAG_SLASH;\n                        }\n                        else {\n                            if (!isWhitespace(c)) {\n                                strictFail(parser, \"Invalid character in tag name\");\n                            }\n                            parser.state = S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case S.OPEN_TAG_SLASH:\n                    if (c === \">\") {\n                        openTag(parser, true);\n                        closeTag(parser);\n                    }\n                    else {\n                        strictFail(parser, \"Forward-slash in opening tag not followed by >\");\n                        parser.state = S.ATTRIB;\n                    }\n                    continue;\n                case S.ATTRIB:\n                    // haven't read the attribute name yet.\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.OPEN_TAG_SLASH;\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        parser.attribName = c;\n                        parser.attribValue = \"\";\n                        parser.state = S.ATTRIB_NAME;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_NAME:\n                    if (c === \"=\") {\n                        parser.state = S.ATTRIB_VALUE;\n                    }\n                    else if (c === \">\") {\n                        strictFail(parser, \"Attribute without value\");\n                        parser.attribValue = parser.attribName;\n                        attrib(parser);\n                        openTag(parser);\n                    }\n                    else if (isWhitespace(c)) {\n                        parser.state = S.ATTRIB_NAME_SAW_WHITE;\n                    }\n                    else if (isMatch(nameBody, c)) {\n                        parser.attribName += c;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_NAME_SAW_WHITE:\n                    if (c === \"=\") {\n                        parser.state = S.ATTRIB_VALUE;\n                    }\n                    else if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else {\n                        strictFail(parser, \"Attribute without value\");\n                        parser.tag.attributes[parser.attribName] = \"\";\n                        parser.attribValue = \"\";\n                        emitNode(parser, \"onattribute\", {\n                            name: parser.attribName,\n                            value: \"\",\n                        });\n                        parser.attribName = \"\";\n                        if (c === \">\") {\n                            openTag(parser);\n                        }\n                        else if (isMatch(nameStart, c)) {\n                            parser.attribName = c;\n                            parser.state = S.ATTRIB_NAME;\n                        }\n                        else {\n                            strictFail(parser, \"Invalid attribute name\");\n                            parser.state = S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case S.ATTRIB_VALUE:\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (isQuote(c)) {\n                        parser.q = c;\n                        parser.state = S.ATTRIB_VALUE_QUOTED;\n                    }\n                    else {\n                        strictFail(parser, \"Unquoted attribute value\");\n                        parser.state = S.ATTRIB_VALUE_UNQUOTED;\n                        parser.attribValue = c;\n                    }\n                    continue;\n                case S.ATTRIB_VALUE_QUOTED:\n                    if (c !== parser.q) {\n                        if (c === \"&\") {\n                            parser.state = S.ATTRIB_VALUE_ENTITY_Q;\n                        }\n                        else {\n                            parser.attribValue += c;\n                        }\n                        continue;\n                    }\n                    attrib(parser);\n                    parser.q = \"\";\n                    parser.state = S.ATTRIB_VALUE_CLOSED;\n                    continue;\n                case S.ATTRIB_VALUE_CLOSED:\n                    if (isWhitespace(c)) {\n                        parser.state = S.ATTRIB;\n                    }\n                    else if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.OPEN_TAG_SLASH;\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        strictFail(parser, \"No whitespace between attributes\");\n                        parser.attribName = c;\n                        parser.attribValue = \"\";\n                        parser.state = S.ATTRIB_NAME;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_VALUE_UNQUOTED:\n                    if (!isAttribEnd(c)) {\n                        if (c === \"&\") {\n                            parser.state = S.ATTRIB_VALUE_ENTITY_U;\n                        }\n                        else {\n                            parser.attribValue += c;\n                        }\n                        continue;\n                    }\n                    attrib(parser);\n                    if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else {\n                        parser.state = S.ATTRIB;\n                    }\n                    continue;\n                case S.CLOSE_TAG:\n                    if (!parser.tagName) {\n                        if (isWhitespace(c)) {\n                            continue;\n                        }\n                        else if (notMatch(nameStart, c)) {\n                            if (parser.script) {\n                                parser.script += \"</\" + c;\n                                parser.state = S.SCRIPT;\n                            }\n                            else {\n                                strictFail(parser, \"Invalid tagname in closing tag.\");\n                            }\n                        }\n                        else {\n                            parser.tagName = c;\n                        }\n                    }\n                    else if (c === \">\") {\n                        closeTag(parser);\n                    }\n                    else if (isMatch(nameBody, c)) {\n                        parser.tagName += c;\n                    }\n                    else if (parser.script) {\n                        parser.script += \"</\" + parser.tagName;\n                        parser.tagName = \"\";\n                        parser.state = S.SCRIPT;\n                    }\n                    else {\n                        if (!isWhitespace(c)) {\n                            strictFail(parser, \"Invalid tagname in closing tag\");\n                        }\n                        parser.state = S.CLOSE_TAG_SAW_WHITE;\n                    }\n                    continue;\n                case S.CLOSE_TAG_SAW_WHITE:\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    if (c === \">\") {\n                        closeTag(parser);\n                    }\n                    else {\n                        strictFail(parser, \"Invalid characters in closing tag\");\n                    }\n                    continue;\n                case S.TEXT_ENTITY:\n                case S.ATTRIB_VALUE_ENTITY_Q:\n                case S.ATTRIB_VALUE_ENTITY_U:\n                    var returnState;\n                    var buffer;\n                    switch (parser.state) {\n                        case S.TEXT_ENTITY:\n                            returnState = S.TEXT;\n                            buffer = \"textNode\";\n                            break;\n                        case S.ATTRIB_VALUE_ENTITY_Q:\n                            returnState = S.ATTRIB_VALUE_QUOTED;\n                            buffer = \"attribValue\";\n                            break;\n                        case S.ATTRIB_VALUE_ENTITY_U:\n                            returnState = S.ATTRIB_VALUE_UNQUOTED;\n                            buffer = \"attribValue\";\n                            break;\n                    }\n                    if (c === \";\") {\n                        if (parser.opt.unparsedEntities) {\n                            var parsedEntity = parseEntity(parser);\n                            parser.entity = \"\";\n                            parser.state = returnState;\n                            parser.write(parsedEntity);\n                        }\n                        else {\n                            parser[buffer] += parseEntity(parser);\n                            parser.entity = \"\";\n                            parser.state = returnState;\n                        }\n                    }\n                    else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n                        parser.entity += c;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid character in entity name\");\n                        parser[buffer] += \"&\" + parser.entity + c;\n                        parser.entity = \"\";\n                        parser.state = returnState;\n                    }\n                    continue;\n                default: /* istanbul ignore next */ {\n                    throw new Error(parser, \"Unknown state: \" + parser.state);\n                }\n            }\n        } // while\n        if (parser.position >= parser.bufferCheckPosition) {\n            checkBufferLength(parser);\n        }\n        return parser;\n    }\n    /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n    /* istanbul ignore next */\n    if (!String.fromCodePoint) {\n        (function () {\n            var stringFromCharCode = String.fromCharCode;\n            var floor = Math.floor;\n            var fromCodePoint = function () {\n                var MAX_SIZE = 0x4000;\n                var codeUnits = [];\n                var highSurrogate;\n                var lowSurrogate;\n                var index = -1;\n                var length = arguments.length;\n                if (!length) {\n                    return \"\";\n                }\n                var result = \"\";\n                while (++index < length) {\n                    var codePoint = Number(arguments[index]);\n                    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                        codePoint < 0 || // not a valid Unicode code point\n                        codePoint > 0x10ffff || // not a valid Unicode code point\n                        floor(codePoint) !== codePoint // not an integer\n                    ) {\n                        throw RangeError(\"Invalid code point: \" + codePoint);\n                    }\n                    if (codePoint <= 0xffff) {\n                        // BMP code point\n                        codeUnits.push(codePoint);\n                    }\n                    else {\n                        // Astral code point; split in surrogate halves\n                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                        codePoint -= 0x10000;\n                        highSurrogate = (codePoint >> 10) + 0xd800;\n                        lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                        codeUnits.push(highSurrogate, lowSurrogate);\n                    }\n                    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                        result += stringFromCharCode.apply(null, codeUnits);\n                        codeUnits.length = 0;\n                    }\n                }\n                return result;\n            };\n            /* istanbul ignore next */\n            if (Object.defineProperty) {\n                Object.defineProperty(String, \"fromCodePoint\", {\n                    value: fromCodePoint,\n                    configurable: true,\n                    writable: true,\n                });\n            }\n            else {\n                String.fromCodePoint = fromCodePoint;\n            }\n        })();\n    }\n    return sax;\n};\nconst sax = /** #__PURE__ */ initializeSax();\nexport { sax };\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Czekanowski similarity between vectors a and b\n * @link [Czekanowski similarity](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function czekanowskiSimilarity(\n  a: NumberArray,\n  b: NumberArray,\n): number {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.min(a[i], b[i]);\n    down += a[i] + b[i];\n  }\n  return (2 * up) / down;\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Dice distance between vectors a and b\n * @link [Dice algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function dice(a: NumberArray, b: NumberArray): number {\n  let a2 = 0;\n  let b2 = 0;\n  let prod2 = 0;\n  for (let i = 0; i < a.length; i++) {\n    a2 += a[i] * a[i];\n    b2 += b[i] * b[i];\n    prod2 += (a[i] - b[i]) * (a[i] - b[i]);\n  }\n  return prod2 / (a2 + b2);\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Intersection distance between vectors a and b\n * @link [Intersection algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function intersection(a: NumberArray, b: NumberArray): number {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += Math.min(a[i], b[i]);\n  }\n  return 1 - ans;\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns Kumar-Hassebrook similarity between vectors a and b\n * @link [Kumar-Hassebrook Similarity algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function kumarHassebrook(\n  a: NumberArray,\n  b: NumberArray,\n): number {\n  let p = 0;\n  let p2 = 0;\n  let q2 = 0;\n  for (let i = 0; i < a.length; i++) {\n    p += a[i] * b[i];\n    p2 += a[i] * a[i];\n    q2 += b[i] * b[i];\n  }\n  return p / (p2 + q2 - p);\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n * Returns the Kulczynski distance between vectors a and b\n * @link [Kulczynski algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function kulczynski(a: NumberArray, b: NumberArray): number {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.abs(a[i] - b[i]);\n    down += Math.min(a[i], b[i]);\n  }\n  return up / down;\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Motyka distance between vectors a and b\n * @link [Motyka algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function motyka(a: NumberArray, b: NumberArray): number {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.min(a[i], b[i]);\n    down += a[i] + b[i];\n  }\n  return 1 - up / down;\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Squared Chord distance between vectors a and b\n * @link [Squared Chord algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function squaredChord(a: NumberArray, b: NumberArray): number {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += (Math.sqrt(a[i]) - Math.sqrt(b[i])) ** 2;\n  }\n  return ans;\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Tanimoto similarity  between vectors p and q, and accepts the bitVector use, see the test case for an example\n * @link [Tanimoto similarity algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n * @param bitvector - bitVector\n *\n */\nexport default function tanimoto(\n  a: NumberArray,\n  b: NumberArray,\n  bitvector?: boolean,\n): number {\n  if (bitvector) {\n    let inter = 0;\n    let union = 0;\n    for (let j = 0; j < a.length; j++) {\n      inter += a[j] && b[j];\n      union += a[j] || b[j];\n    }\n    if (union === 0) {\n      return 1;\n    }\n    return inter / union;\n  } else {\n    let p = 0;\n    let q = 0;\n    let m = 0;\n    for (let i = 0; i < a.length; i++) {\n      p += a[i];\n      q += b[i];\n      m += Math.min(a[i], b[i]);\n    }\n    return 1 - (p + q - 2 * m) / (p + q - m);\n  }\n}\n", "// @ts-expect-error ml-tree-similarity is not typed\nimport * as tree from 'ml-tree-similarity';\n\nexport { tree };\n\nexport { default as cosine } from './similarities/cosine';\n\nexport { default as czekanowski } from './similarities/czekanowski';\n\nexport { default as dice } from './similarities/dice';\n\nexport { default as intersection } from './similarities/intersection';\n\nexport { default as kulczynski } from './similarities/kulczynski';\n\nexport { default as motyka } from './similarities/motyka';\n\nexport { default as pearson } from './similarities/pearson';\n\nexport { default as squaredChord } from './similarities/squaredChord';\n\nexport { default as tanimoto } from './similarities/tanimoto';\n\nexport { default as kumarHassebrook } from './similarities/kumarHassebrook';\n", "import { getSimilarity } from './getSimilarity';\n\nexport { createTree } from './createTree';\n\nexport function treeSimilarity(A, B, options = {}) {\n  return getSimilarity(A, B, options);\n}\n\nexport function getFunction(options = {}) {\n  return (A, B) => getSimilarity(A, B, options);\n}\n", "import binarySearch from 'binary-search';\nimport { ascending } from 'num-sort';\n\n/**\n * Function that creates the tree\n * @param {Array<Array<number>>} spectrum\n * @param {object} [options]\n * @return {Tree|null}\n * left and right have the same structure than the parent,\n * or are null if they are leaves\n */\nexport function createTree(spectrum, options = {}) {\n  var X = spectrum[0];\n  const {\n    minWindow = 0.16,\n    threshold = 0.01,\n    from = X[0],\n    to = X[X.length - 1]\n  } = options;\n\n  return mainCreateTree(\n    spectrum[0],\n    spectrum[1],\n    from,\n    to,\n    minWindow,\n    threshold\n  );\n}\n\nfunction mainCreateTree(X, Y, from, to, minWindow, threshold) {\n  if (to - from < minWindow) {\n    return null;\n  }\n\n  // search first point\n  var start = binarySearch(X, from, ascending);\n  if (start < 0) {\n    start = ~start;\n  }\n\n  // stop at last point\n  var sum = 0;\n  var center = 0;\n  for (var i = start; i < X.length; i++) {\n    if (X[i] >= to) {\n      break;\n    }\n    sum += Y[i];\n    center += X[i] * Y[i];\n  }\n\n  if (sum < threshold) {\n    return null;\n  }\n\n  center /= sum;\n  if (center - from < 1e-6 || to - center < 1e-6) {\n    return null;\n  }\n  if (center - from < minWindow / 4) {\n    return mainCreateTree(X, Y, center, to, minWindow, threshold);\n  } else {\n    if (to - center < minWindow / 4) {\n      return mainCreateTree(X, Y, from, center, minWindow, threshold);\n    } else {\n      return new Tree(\n        sum,\n        center,\n        mainCreateTree(X, Y, from, center, minWindow, threshold),\n        mainCreateTree(X, Y, center, to, minWindow, threshold)\n      );\n    }\n  }\n}\n\nclass Tree {\n  constructor(sum, center, left, right) {\n    this.sum = sum;\n    this.center = center;\n    this.left = left;\n    this.right = right;\n  }\n}\n", "import { createTree } from './createTree';\n\n/**\n * Similarity between two nodes\n * @param {Tree|Array<Array<number>>} a - tree A node\n * @param {Tree|Array<Array<number>>} b - tree B node\n * @param {object} [options]\n * @return {number} similarity measure between tree nodes\n */\nexport function getSimilarity(a, b, options = {}) {\n  const { alpha = 0.1, beta = 0.33, gamma = 0.001 } = options;\n\n  if (a === null || b === null) {\n    return 0;\n  }\n  if (Array.isArray(a)) {\n    a = createTree(a);\n  }\n  if (Array.isArray(b)) {\n    b = createTree(b);\n  }\n\n  var C =\n    (alpha * Math.min(a.sum, b.sum)) / Math.max(a.sum, b.sum) +\n    (1 - alpha) * Math.exp(-gamma * Math.abs(a.center - b.center));\n\n  return (\n    beta * C +\n    ((1 - beta) *\n      (getSimilarity(a.left, b.left, options) +\n        getSimilarity(a.right, b.right, options))) /\n      2\n  );\n}\n", "import { NumberArray } from 'cheminfo-types';\n/**\n * Returns the average of cosine distances between vectors a and b\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function cosine(a: NumberArray, b: NumberArray): number {\n  let p = 0;\n  let p2 = 0;\n  let q2 = 0;\n  for (let i = 0; i < a.length; i++) {\n    p += a[i] * b[i];\n    p2 += a[i] * a[i];\n    q2 += b[i] * b[i];\n  }\n  return p / (Math.sqrt(p2) * Math.sqrt(q2));\n}\n", "import { NumberArray } from 'cheminfo-types';\n\nimport diceD from '../distances/dice';\n/**\n *Returns the Dice similarity between vectors a and b\n * @link [Dice similarity algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function dice(a: NumberArray, b: NumberArray): number {\n  return 1 - diceD(a, b);\n}\n", "import { NumberArray } from 'cheminfo-types';\n\nimport intersectionD from '../distances/intersection';\n/**\n *Returns the Intersection similarity distance between vectors a and b\n * @link [Intersection similarity algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function intersection(a: NumberArray, b: NumberArray): number {\n  return 1 - intersectionD(a, b);\n}\n", "import { NumberArray } from 'cheminfo-types';\n\nimport kulczynskiD from '../distances/kulczynski';\n/**\n *Returns the Kulczynski similarity between vectors a and b\n * @link [Kulczinski algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function kulczynski(a: NumberArray, b: NumberArray): number {\n  return 1 / kulczynskiD(a, b);\n}\n", "import { NumberArray } from 'cheminfo-types';\n\nimport motykaD from '../distances/motyka';\n/**\n *Returns the Motyka similarity between vectors a and b\n * @link [Motyka algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function motyka(a: NumberArray, b: NumberArray): number {\n  return 1 - motykaD(a, b);\n}\n", "// eslint-disable-next-line @typescript-eslint/unbound-method\nconst toString = Object.prototype.toString;\n\nexport type AnyArray =\n  | any[] // eslint-disable-line @typescript-eslint/no-explicit-any\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Checks if an object is an instance of an Array (array or typed array, except those that contain bigint values).\n *\n * @param value - Object to check.\n * @returns True if the object is an array or a typed array.\n */\nexport function isAnyArray(value: unknown): value is AnyArray {\n  const tag = toString.call(value);\n  return tag.endsWith('Array]') && !tag.includes('Big');\n}\n", "import { isAnyArray } from 'is-any-array';\n\nfunction sum(input) {\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport { sum as default };\n", "import sum from 'ml-array-sum';\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport { mean as default };\n", "import { NumberArray } from 'cheminfo-types';\nimport mean from 'ml-array-mean';\n\nimport cosine from './cosine';\n\nexport default function pearson(a: NumberArray, b: NumberArray): number {\n  let avgA = mean(a);\n  let avgB = mean(b);\n\n  let newA = new Array(a.length);\n  let newB = new Array(b.length);\n  for (let i = 0; i < newA.length; i++) {\n    newA[i] = a[i] - avgA;\n    newB[i] = b[i] - avgB;\n  }\n\n  return cosine(newA, newB);\n}\n", "import { NumberArray } from 'cheminfo-types';\n\nimport squaredChordD from '../distances/squaredChord';\n/**\n *Returns the Squared-chord distance between vectors a and b\n * @link [Squared-chord algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function squaredChord(a: NumberArray, b: NumberArray): number {\n  return 1 - squaredChordD(a, b);\n}\n", "import { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { Runnable } from \"../runnables/base.js\";\nimport { ensureConfig } from \"../runnables/config.js\";\n/**\n * Abstract base class for a Document retrieval system. A retrieval system\n * is defined as something that can take string queries and return the\n * most 'relevant' Documents from some source.\n */\nexport class BaseRetriever extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callbacks = fields?.callbacks;\n        this.tags = fields?.tags ?? [];\n        this.metadata = fields?.metadata ?? {};\n        this.verbose = fields?.verbose ?? false;\n    }\n    /**\n     * TODO: This should be an abstract method, but we'd like to avoid breaking\n     * changes to people currently using subclassed custom retrievers.\n     * Change it on next major release.\n     */\n    _getRelevantDocuments(_query, _callbacks) {\n        throw new Error(\"Not implemented!\");\n    }\n    async invoke(input, options) {\n        return this.getRelevantDocuments(input, ensureConfig(options));\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Main method used to retrieve relevant documents. It takes a query\n     * string and an optional configuration object, and returns a promise that\n     * resolves to an array of `Document` objects. This method handles the\n     * retrieval process, including starting and ending callbacks, and error\n     * handling.\n     * @param query The query string to retrieve relevant documents for.\n     * @param config Optional configuration object for the retrieval process.\n     * @returns A promise that resolves to an array of `Document` objects.\n     */\n    async getRelevantDocuments(query, config) {\n        const parsedConfig = ensureConfig(parseCallbackConfigArg(config));\n        const callbackManager_ = await CallbackManager.configure(parsedConfig.callbacks, this.callbacks, parsedConfig.tags, this.tags, parsedConfig.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleRetrieverStart(this.toJSON(), query, parsedConfig.runId, undefined, undefined, undefined, parsedConfig.runName);\n        try {\n            const results = await this._getRelevantDocuments(query, runManager);\n            await runManager?.handleRetrieverEnd(results);\n            return results;\n        }\n        catch (error) {\n            await runManager?.handleRetrieverError(error);\n            throw error;\n        }\n    }\n}\n", "import { BaseRetriever, } from \"./retrievers/index.js\";\nimport { Serializable } from \"./load/serializable.js\";\n/**\n * Class for performing document retrieval from a VectorStore. Can perform\n * similarity search or maximal marginal relevance search.\n */\nexport class VectorStoreRetriever extends BaseRetriever {\n    static lc_name() {\n        return \"VectorStoreRetriever\";\n    }\n    get lc_namespace() {\n        return [\"langchain_core\", \"vectorstores\"];\n    }\n    _vectorstoreType() {\n        return this.vectorStore._vectorstoreType();\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"searchType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"similarity\"\n        });\n        Object.defineProperty(this, \"searchKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.vectorStore = fields.vectorStore;\n        this.k = fields.k ?? this.k;\n        this.searchType = fields.searchType ?? this.searchType;\n        this.filter = fields.filter;\n        if (fields.searchType === \"mmr\") {\n            this.searchKwargs = fields.searchKwargs;\n        }\n    }\n    async _getRelevantDocuments(query, runManager) {\n        if (this.searchType === \"mmr\") {\n            if (typeof this.vectorStore.maxMarginalRelevanceSearch !== \"function\") {\n                throw new Error(`The vector store backing this retriever, ${this._vectorstoreType()} does not support max marginal relevance search.`);\n            }\n            return this.vectorStore.maxMarginalRelevanceSearch(query, {\n                k: this.k,\n                filter: this.filter,\n                ...this.searchKwargs,\n            }, runManager?.getChild(\"vectorstore\"));\n        }\n        return this.vectorStore.similaritySearch(query, this.k, this.filter, runManager?.getChild(\"vectorstore\"));\n    }\n    async addDocuments(documents, options) {\n        return this.vectorStore.addDocuments(documents, options);\n    }\n}\n/**\n * Abstract class representing a store of vectors. Provides methods for\n * adding vectors and documents, deleting from the store, and searching\n * the store.\n */\nexport class VectorStore extends Serializable {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(embeddings, dbConfig) {\n        super(dbConfig);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"vectorstores\", this._vectorstoreType()]\n        });\n        Object.defineProperty(this, \"embeddings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.embeddings = embeddings;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async delete(_params) {\n        throw new Error(\"Not implemented.\");\n    }\n    async similaritySearch(query, k = 4, filter = undefined, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        const results = await this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k, filter);\n        return results.map((result) => result[0]);\n    }\n    async similaritySearchWithScore(query, k = 4, filter = undefined, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        return this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k, filter);\n    }\n    static fromTexts(_texts, _metadatas, _embeddings, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _dbConfig) {\n        throw new Error(\"the Langchain vectorstore implementation you are using forgot to override this, please report a bug\");\n    }\n    static fromDocuments(_docs, _embeddings, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _dbConfig) {\n        throw new Error(\"the Langchain vectorstore implementation you are using forgot to override this, please report a bug\");\n    }\n    asRetriever(kOrFields, filter, callbacks, tags, metadata, verbose) {\n        if (typeof kOrFields === \"number\") {\n            return new VectorStoreRetriever({\n                vectorStore: this,\n                k: kOrFields,\n                filter,\n                tags: [...(tags ?? []), this._vectorstoreType()],\n                metadata,\n                verbose,\n                callbacks,\n            });\n        }\n        else {\n            const params = {\n                vectorStore: this,\n                k: kOrFields?.k,\n                filter: kOrFields?.filter,\n                tags: [...(kOrFields?.tags ?? []), this._vectorstoreType()],\n                metadata: kOrFields?.metadata,\n                verbose: kOrFields?.verbose,\n                callbacks: kOrFields?.callbacks,\n                searchType: kOrFields?.searchType,\n            };\n            if (kOrFields?.searchType === \"mmr\") {\n                return new VectorStoreRetriever({\n                    ...params,\n                    searchKwargs: kOrFields.searchKwargs,\n                });\n            }\n            return new VectorStoreRetriever({ ...params });\n        }\n    }\n}\n/**\n * Abstract class extending VectorStore with functionality for saving and\n * loading the vector store.\n */\nexport class SaveableVectorStore extends VectorStore {\n    static load(_directory, _embeddings) {\n        throw new Error(\"Not implemented\");\n    }\n}\n", "import { similarity as ml_distance_similarity } from \"ml-distance\";\nimport { VectorStore } from \"@langchain/core/vectorstores\";\nimport { Document } from \"@langchain/core/documents\";\n/**\n * Class that extends `VectorStore` to store vectors in memory. Provides\n * methods for adding documents, performing similarity searches, and\n * creating instances from texts, documents, or an existing index.\n */\nexport class MemoryVectorStore extends VectorStore {\n    _vectorstoreType() {\n        return \"memory\";\n    }\n    constructor(embeddings, { similarity, ...rest } = {}) {\n        super(embeddings, rest);\n        Object.defineProperty(this, \"memoryVectors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"similarity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.similarity = similarity ?? ml_distance_similarity.cosine;\n    }\n    /**\n     * Method to add documents to the memory vector store. It extracts the\n     * text from each document, generates embeddings for them, and adds the\n     * resulting vectors to the store.\n     * @param documents Array of `Document` instances to be added to the store.\n     * @returns Promise that resolves when all documents have been added.\n     */\n    async addDocuments(documents) {\n        const texts = documents.map(({ pageContent }) => pageContent);\n        return this.addVectors(await this.embeddings.embedDocuments(texts), documents);\n    }\n    /**\n     * Method to add vectors to the memory vector store. It creates\n     * `MemoryVector` instances for each vector and document pair and adds\n     * them to the store.\n     * @param vectors Array of vectors to be added to the store.\n     * @param documents Array of `Document` instances corresponding to the vectors.\n     * @returns Promise that resolves when all vectors have been added.\n     */\n    async addVectors(vectors, documents) {\n        const memoryVectors = vectors.map((embedding, idx) => ({\n            content: documents[idx].pageContent,\n            embedding,\n            metadata: documents[idx].metadata,\n        }));\n        this.memoryVectors = this.memoryVectors.concat(memoryVectors);\n    }\n    /**\n     * Method to perform a similarity search in the memory vector store. It\n     * calculates the similarity between the query vector and each vector in\n     * the store, sorts the results by similarity, and returns the top `k`\n     * results along with their scores.\n     * @param query Query vector to compare against the vectors in the store.\n     * @param k Number of top results to return.\n     * @param filter Optional filter function to apply to the vectors before performing the search.\n     * @returns Promise that resolves with an array of tuples, each containing a `Document` and its similarity score.\n     */\n    async similaritySearchVectorWithScore(query, k, filter) {\n        const filterFunction = (memoryVector) => {\n            if (!filter) {\n                return true;\n            }\n            const doc = new Document({\n                metadata: memoryVector.metadata,\n                pageContent: memoryVector.content,\n            });\n            return filter(doc);\n        };\n        const filteredMemoryVectors = this.memoryVectors.filter(filterFunction);\n        const searches = filteredMemoryVectors\n            .map((vector, index) => ({\n            similarity: this.similarity(query, vector.embedding),\n            index,\n        }))\n            .sort((a, b) => (a.similarity > b.similarity ? -1 : 0))\n            .slice(0, k);\n        const result = searches.map((search) => [\n            new Document({\n                metadata: filteredMemoryVectors[search.index].metadata,\n                pageContent: filteredMemoryVectors[search.index].content,\n            }),\n            search.similarity,\n        ]);\n        return result;\n    }\n    /**\n     * Static method to create a `MemoryVectorStore` instance from an array of\n     * texts. It creates a `Document` for each text and metadata pair, and\n     * adds them to the store.\n     * @param texts Array of texts to be added to the store.\n     * @param metadatas Array or single object of metadata corresponding to the texts.\n     * @param embeddings `Embeddings` instance used to generate embeddings for the texts.\n     * @param dbConfig Optional `MemoryVectorStoreArgs` to configure the `MemoryVectorStore` instance.\n     * @returns Promise that resolves with a new `MemoryVectorStore` instance.\n     */\n    static async fromTexts(texts, metadatas, embeddings, dbConfig) {\n        const docs = [];\n        for (let i = 0; i < texts.length; i += 1) {\n            const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n            const newDoc = new Document({\n                pageContent: texts[i],\n                metadata,\n            });\n            docs.push(newDoc);\n        }\n        return MemoryVectorStore.fromDocuments(docs, embeddings, dbConfig);\n    }\n    /**\n     * Static method to create a `MemoryVectorStore` instance from an array of\n     * `Document` instances. It adds the documents to the store.\n     * @param docs Array of `Document` instances to be added to the store.\n     * @param embeddings `Embeddings` instance used to generate embeddings for the documents.\n     * @param dbConfig Optional `MemoryVectorStoreArgs` to configure the `MemoryVectorStore` instance.\n     * @returns Promise that resolves with a new `MemoryVectorStore` instance.\n     */\n    static async fromDocuments(docs, embeddings, dbConfig) {\n        const instance = new this(embeddings, dbConfig);\n        await instance.addDocuments(docs);\n        return instance;\n    }\n    /**\n     * Static method to create a `MemoryVectorStore` instance from an existing\n     * index. It creates a new `MemoryVectorStore` instance without adding any\n     * documents or vectors.\n     * @param embeddings `Embeddings` instance used to generate embeddings for the documents.\n     * @param dbConfig Optional `MemoryVectorStoreArgs` to configure the `MemoryVectorStore` instance.\n     * @returns Promise that resolves with a new `MemoryVectorStore` instance.\n     */\n    static async fromExistingIndex(embeddings, dbConfig) {\n        const instance = new this(embeddings, dbConfig);\n        return instance;\n    }\n}\n", "/* eslint-disable no-plusplus */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-arrow-callback */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-extraneous-dependencies */\n/**\n * This is copied from @vespaiach/axios-fetch-adapter, which exposes an ESM\n * module without setting the \"type\" field in package.json.\n */\nimport axios from \"axios\";\nimport { EventStreamContentType, getLines, getBytes, getMessages, } from \"./event-source-parse.js\";\nfunction tryJsonStringify(data) {\n    try {\n        return JSON.stringify(data);\n    }\n    catch (e) {\n        return data;\n    }\n}\n/**\n * In order to avoid import issues with axios 1.x, copying here the internal\n * utility functions that we used to import directly from axios.\n */\n// Copied from axios/lib/core/settle.js\nfunction settle(resolve, reject, response) {\n    const { validateStatus } = response.config;\n    if (!response.status || !validateStatus || validateStatus(response.status)) {\n        resolve(response);\n    }\n    else {\n        reject(createError(`Request failed with status code ${response.status} and body ${typeof response.data === \"string\"\n            ? response.data\n            : tryJsonStringify(response.data)}`, response.config, null, response.request, response));\n    }\n}\n// Copied from axios/lib/helpers/isAbsoluteURL.js\nfunction isAbsoluteURL(url) {\n    // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n    // by any combination of letters, digits, plus, period, or hyphen.\n    return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n// Copied from axios/lib/helpers/combineURLs.js\nfunction combineURLs(baseURL, relativeURL) {\n    return relativeURL\n        ? baseURL.replace(/\\/+$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\")\n        : baseURL;\n}\n// Copied from axios/lib/helpers/buildURL.js\nfunction encode(val) {\n    return encodeURIComponent(val)\n        .replace(/%3A/gi, \":\")\n        .replace(/%24/g, \"$\")\n        .replace(/%2C/gi, \",\")\n        .replace(/%20/g, \"+\")\n        .replace(/%5B/gi, \"[\")\n        .replace(/%5D/gi, \"]\");\n}\nfunction buildURL(url, params, paramsSerializer) {\n    if (!params) {\n        return url;\n    }\n    var serializedParams;\n    if (paramsSerializer) {\n        serializedParams = paramsSerializer(params);\n    }\n    else if (isURLSearchParams(params)) {\n        serializedParams = params.toString();\n    }\n    else {\n        var parts = [];\n        forEach(params, function serialize(val, key) {\n            if (val === null || typeof val === \"undefined\") {\n                return;\n            }\n            if (isArray(val)) {\n                key = `${key}[]`;\n            }\n            else {\n                val = [val];\n            }\n            forEach(val, function parseValue(v) {\n                if (isDate(v)) {\n                    v = v.toISOString();\n                }\n                else if (isObject(v)) {\n                    v = JSON.stringify(v);\n                }\n                parts.push(`${encode(key)}=${encode(v)}`);\n            });\n        });\n        serializedParams = parts.join(\"&\");\n    }\n    if (serializedParams) {\n        var hashmarkIndex = url.indexOf(\"#\");\n        if (hashmarkIndex !== -1) {\n            url = url.slice(0, hashmarkIndex);\n        }\n        url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + serializedParams;\n    }\n    return url;\n}\n// Copied from axios/lib/core/buildFullPath.js\nfunction buildFullPath(baseURL, requestedURL) {\n    if (baseURL && !isAbsoluteURL(requestedURL)) {\n        return combineURLs(baseURL, requestedURL);\n    }\n    return requestedURL;\n}\n// Copied from axios/lib/utils.js\nfunction isUndefined(val) {\n    return typeof val === \"undefined\";\n}\nfunction isObject(val) {\n    return val !== null && typeof val === \"object\";\n}\nfunction isDate(val) {\n    return toString.call(val) === \"[object Date]\";\n}\nfunction isURLSearchParams(val) {\n    return toString.call(val) === \"[object URLSearchParams]\";\n}\nfunction isArray(val) {\n    return Array.isArray(val);\n}\nfunction forEach(obj, fn) {\n    // Don't bother if no value provided\n    if (obj === null || typeof obj === \"undefined\") {\n        return;\n    }\n    // Force an array if not already something iterable\n    if (typeof obj !== \"object\") {\n        obj = [obj];\n    }\n    if (isArray(obj)) {\n        // Iterate over array values\n        for (var i = 0, l = obj.length; i < l; i++) {\n            fn.call(null, obj[i], i, obj);\n        }\n    }\n    else {\n        // Iterate over object keys\n        for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                fn.call(null, obj[key], key, obj);\n            }\n        }\n    }\n}\nfunction isFormData(val) {\n    return toString.call(val) === \"[object FormData]\";\n}\n// TODO this needs to be fixed to run in newer browser-like environments\n// https://github.com/vespaiach/axios-fetch-adapter/issues/20#issue-1396365322\nfunction isStandardBrowserEnv() {\n    if (typeof navigator !== \"undefined\" &&\n        // eslint-disable-next-line no-undef\n        (navigator.product === \"ReactNative\" ||\n            // eslint-disable-next-line no-undef\n            navigator.product === \"NativeScript\" ||\n            // eslint-disable-next-line no-undef\n            navigator.product === \"NS\")) {\n        return false;\n    }\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\";\n}\n/**\n * - Create a request object\n * - Get response body\n * - Check if timeout\n */\nexport default async function fetchAdapter(config) {\n    const request = createRequest(config);\n    const data = await getResponse(request, config);\n    return new Promise((resolve, reject) => {\n        if (data instanceof Error) {\n            reject(data);\n        }\n        else {\n            // eslint-disable-next-line no-unused-expressions\n            Object.prototype.toString.call(config.settle) === \"[object Function]\"\n                ? config.settle(resolve, reject, data)\n                : settle(resolve, reject, data);\n        }\n    });\n}\n/**\n * Fetch API stage two is to get response body. This funtion tries to retrieve\n * response body based on response's type\n */\nasync function getResponse(request, config) {\n    let stageOne;\n    try {\n        stageOne = await fetch(request);\n    }\n    catch (e) {\n        if (e && e.name === \"AbortError\") {\n            return createError(\"Request aborted\", config, \"ECONNABORTED\", request);\n        }\n        if (e && e.name === \"TimeoutError\") {\n            return createError(\"Request timeout\", config, \"ECONNABORTED\", request);\n        }\n        return createError(\"Network Error\", config, \"ERR_NETWORK\", request);\n    }\n    const headers = {};\n    stageOne.headers.forEach((value, key) => {\n        headers[key] = value;\n    });\n    const response = {\n        ok: stageOne.ok,\n        status: stageOne.status,\n        statusText: stageOne.statusText,\n        headers,\n        config,\n        request,\n    };\n    if (stageOne.status >= 200 && stageOne.status !== 204) {\n        if (config.responseType === \"stream\") {\n            const contentType = stageOne.headers.get(\"content-type\");\n            if (!contentType?.startsWith(EventStreamContentType)) {\n                // If the content-type is not stream, response is most likely an error\n                if (stageOne.status >= 400) {\n                    // If the error is a JSON, parse it. Otherwise, return as text\n                    if (contentType?.startsWith(\"application/json\")) {\n                        response.data = await stageOne.json();\n                        return response;\n                    }\n                    else {\n                        response.data = await stageOne.text();\n                        return response;\n                    }\n                }\n                // If the non-stream response is also not an error, throw\n                throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: ${contentType}`);\n            }\n            await getBytes(stageOne.body, getLines(getMessages(config.onmessage)));\n        }\n        else {\n            switch (config.responseType) {\n                case \"arraybuffer\":\n                    response.data = await stageOne.arrayBuffer();\n                    break;\n                case \"blob\":\n                    response.data = await stageOne.blob();\n                    break;\n                case \"json\":\n                    response.data = await stageOne.json();\n                    break;\n                case \"formData\":\n                    response.data = await stageOne.formData();\n                    break;\n                default:\n                    response.data = await stageOne.text();\n                    break;\n            }\n        }\n    }\n    return response;\n}\n/**\n * This function will create a Request object based on configuration's axios\n */\nfunction createRequest(config) {\n    const headers = new Headers(config.headers);\n    // HTTP basic authentication\n    if (config.auth) {\n        const username = config.auth.username || \"\";\n        const password = config.auth.password\n            ? decodeURI(encodeURIComponent(config.auth.password))\n            : \"\";\n        headers.set(\"Authorization\", `Basic ${btoa(`${username}:${password}`)}`);\n    }\n    const method = config.method.toUpperCase();\n    const options = {\n        headers,\n        method,\n    };\n    if (method !== \"GET\" && method !== \"HEAD\") {\n        options.body = config.data;\n        // In these cases the browser will automatically set the correct Content-Type,\n        // but only if that header hasn't been set yet. So that's why we're deleting it.\n        if (isFormData(options.body) && isStandardBrowserEnv()) {\n            headers.delete(\"Content-Type\");\n        }\n    }\n    // Some `fetch` implementations will override the Content-Type to text/plain\n    // when body is a string.\n    // See https://github.com/langchain-ai/langchainjs/issues/1010\n    if (typeof options.body === \"string\") {\n        options.body = new TextEncoder().encode(options.body);\n    }\n    if (config.mode) {\n        options.mode = config.mode;\n    }\n    if (config.cache) {\n        options.cache = config.cache;\n    }\n    if (config.integrity) {\n        options.integrity = config.integrity;\n    }\n    if (config.redirect) {\n        options.redirect = config.redirect;\n    }\n    if (config.referrer) {\n        options.referrer = config.referrer;\n    }\n    if (config.timeout && config.timeout > 0) {\n        options.signal = AbortSignal.timeout(config.timeout);\n    }\n    if (config.signal) {\n        // this overrides the timeout signal if both are set\n        options.signal = config.signal;\n    }\n    // This config is similar to XHR’s withCredentials flag, but with three available values instead of two.\n    // So if withCredentials is not set, default value 'same-origin' will be used\n    if (!isUndefined(config.withCredentials)) {\n        options.credentials = config.withCredentials ? \"include\" : \"omit\";\n    }\n    // for streaming\n    if (config.responseType === \"stream\") {\n        options.headers.set(\"Accept\", EventStreamContentType);\n    }\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const url = buildURL(fullPath, config.params, config.paramsSerializer);\n    // Expected browser to throw error if there is any wrong configuration value\n    return new Request(url, options);\n}\n/**\n * Note:\n *\n *   From version >= 0.27.0, createError function is replaced by AxiosError class.\n *   So I copy the old createError function here for backward compatible.\n *\n *\n *\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction createError(message, config, code, request, response) {\n    if (axios.AxiosError && typeof axios.AxiosError === \"function\") {\n        return new axios.AxiosError(message, axios.AxiosError[code], config, request, response);\n    }\n    const error = new Error(message);\n    return enhanceError(error, config, code, request, response);\n}\n/**\n *\n * Note:\n *\n *   This function is for backward compatible.\n *\n *\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nfunction enhanceError(error, config, code, request, response) {\n    error.config = config;\n    if (code) {\n        error.code = code;\n    }\n    error.request = request;\n    error.response = response;\n    error.isAxiosError = true;\n    error.toJSON = function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: this.description,\n            number: this.number,\n            // Mozilla\n            fileName: this.fileName,\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            stack: this.stack,\n            // Axios\n            config: this.config,\n            code: this.code,\n            status: this.response && this.response.status ? this.response.status : null,\n        };\n    };\n    return error;\n}\n", "/* eslint-disable prefer-template */\n/* eslint-disable default-case */\n/* eslint-disable no-plusplus */\n// Adapted from https://github.com/gfortaine/fetch-event-source/blob/main/src/parse.ts\n// due to a packaging issue in the original.\n// MIT License\nimport { IterableReadableStream } from \"./stream.js\";\nexport const EventStreamContentType = \"text/event-stream\";\n/**\n * Converts a ReadableStream into a callback pattern.\n * @param stream The input ReadableStream.\n * @param onChunk A function that will be called on each new byte chunk in the stream.\n * @returns {Promise<void>} A promise that will be resolved when the stream closes.\n */\nexport async function getBytes(stream, onChunk) {\n    const reader = stream.getReader();\n    // CHANGED: Introduced a \"flush\" mechanism to process potential pending messages when the stream ends.\n    //          This change is essential to ensure that we capture every last piece of information from streams,\n    //          such as those from Azure OpenAI, which may not terminate with a blank line. Without this\n    //          mechanism, we risk ignoring a possibly significant last message.\n    //          See https://github.com/langchain-ai/langchainjs/issues/1299 for details.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const result = await reader.read();\n        if (result.done) {\n            onChunk(new Uint8Array(), true);\n            break;\n        }\n        onChunk(result.value);\n    }\n}\n/**\n * Parses arbitary byte chunks into EventSource line buffers.\n * Each line should be of the format \"field: value\" and ends with \\r, \\n, or \\r\\n.\n * @param onLine A function that will be called on each new EventSource line.\n * @returns A function that should be called for each incoming byte chunk.\n */\nexport function getLines(onLine) {\n    let buffer;\n    let position; // current read position\n    let fieldLength; // length of the `field` portion of the line\n    let discardTrailingNewline = false;\n    // return a function that can process each incoming byte chunk:\n    return function onChunk(arr, flush) {\n        if (flush) {\n            onLine(arr, 0, true);\n            return;\n        }\n        if (buffer === undefined) {\n            buffer = arr;\n            position = 0;\n            fieldLength = -1;\n        }\n        else {\n            // we're still parsing the old line. Append the new bytes into buffer:\n            buffer = concat(buffer, arr);\n        }\n        const bufLength = buffer.length;\n        let lineStart = 0; // index where the current line starts\n        while (position < bufLength) {\n            if (discardTrailingNewline) {\n                if (buffer[position] === 10 /* ControlChars.NewLine */) {\n                    lineStart = ++position; // skip to next char\n                }\n                discardTrailingNewline = false;\n            }\n            // start looking forward till the end of line:\n            let lineEnd = -1; // index of the \\r or \\n char\n            for (; position < bufLength && lineEnd === -1; ++position) {\n                switch (buffer[position]) {\n                    case 58 /* ControlChars.Colon */:\n                        if (fieldLength === -1) {\n                            // first colon in line\n                            fieldLength = position - lineStart;\n                        }\n                        break;\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore:7029 \\r case below should fallthrough to \\n:\n                    case 13 /* ControlChars.CarriageReturn */:\n                        discardTrailingNewline = true;\n                    // eslint-disable-next-line no-fallthrough\n                    case 10 /* ControlChars.NewLine */:\n                        lineEnd = position;\n                        break;\n                }\n            }\n            if (lineEnd === -1) {\n                // We reached the end of the buffer but the line hasn't ended.\n                // Wait for the next arr and then continue parsing:\n                break;\n            }\n            // we've reached the line end, send it out:\n            onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n            lineStart = position; // we're now on the next line\n            fieldLength = -1;\n        }\n        if (lineStart === bufLength) {\n            buffer = undefined; // we've finished reading it\n        }\n        else if (lineStart !== 0) {\n            // Create a new view into buffer beginning at lineStart so we don't\n            // need to copy over the previous lines when we get the new arr:\n            buffer = buffer.subarray(lineStart);\n            position -= lineStart;\n        }\n    };\n}\n/**\n * Parses line buffers into EventSourceMessages.\n * @param onId A function that will be called on each `id` field.\n * @param onRetry A function that will be called on each `retry` field.\n * @param onMessage A function that will be called on each message.\n * @returns A function that should be called for each incoming line buffer.\n */\nexport function getMessages(onMessage, onId, onRetry) {\n    let message = newMessage();\n    const decoder = new TextDecoder();\n    // return a function that can process each incoming line buffer:\n    return function onLine(line, fieldLength, flush) {\n        if (flush) {\n            if (!isEmpty(message)) {\n                onMessage?.(message);\n                message = newMessage();\n            }\n            return;\n        }\n        if (line.length === 0) {\n            // empty line denotes end of message. Trigger the callback and start a new message:\n            onMessage?.(message);\n            message = newMessage();\n        }\n        else if (fieldLength > 0) {\n            // exclude comments and lines with no values\n            // line is of format \"<field>:<value>\" or \"<field>: <value>\"\n            // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n            const field = decoder.decode(line.subarray(0, fieldLength));\n            const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* ControlChars.Space */ ? 2 : 1);\n            const value = decoder.decode(line.subarray(valueOffset));\n            switch (field) {\n                case \"data\":\n                    // if this message already has data, append the new value to the old.\n                    // otherwise, just set to the new value:\n                    message.data = message.data ? message.data + \"\\n\" + value : value; // otherwise,\n                    break;\n                case \"event\":\n                    message.event = value;\n                    break;\n                case \"id\":\n                    onId?.((message.id = value));\n                    break;\n                case \"retry\": {\n                    const retry = parseInt(value, 10);\n                    if (!Number.isNaN(retry)) {\n                        // per spec, ignore non-integers\n                        onRetry?.((message.retry = retry));\n                    }\n                    break;\n                }\n            }\n        }\n    };\n}\nfunction concat(a, b) {\n    const res = new Uint8Array(a.length + b.length);\n    res.set(a);\n    res.set(b, a.length);\n    return res;\n}\nfunction newMessage() {\n    // data, event, and id must be initialized to empty strings:\n    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n    // retry should be initialized to undefined so we return a consistent shape\n    // to the js engine all the time: https://mathiasbynens.be/notes/shapes-ics#takeaways\n    return {\n        data: \"\",\n        event: \"\",\n        id: \"\",\n        retry: undefined,\n    };\n}\nexport function convertEventStreamToIterableReadableDataStream(stream, onMetadataEvent) {\n    const dataStream = new ReadableStream({\n        async start(controller) {\n            const enqueueLine = getMessages((msg) => {\n                if (msg.event === \"error\") {\n                    throw new Error(msg.data ?? \"Unspecified event streaming error.\");\n                }\n                else if (msg.event === \"metadata\") {\n                    onMetadataEvent?.(msg);\n                }\n                else {\n                    if (msg.data)\n                        controller.enqueue(msg.data);\n                }\n            });\n            const onLine = (line, fieldLength, flush) => {\n                enqueueLine(line, fieldLength, flush);\n                if (flush)\n                    controller.close();\n            };\n            await getBytes(stream, getLines(onLine));\n        },\n    });\n    return IterableReadableStream.fromReadableStream(dataStream);\n}\nfunction isEmpty(message) {\n    return (message.data === \"\" &&\n        message.event === \"\" &&\n        message.id === \"\" &&\n        message.retry === undefined);\n}\n", "/**\n * Given a list of documents, this util formats their contents\n * into a string, separated by newlines.\n *\n * @param documents\n * @returns A string of the documents page content, separated by newlines.\n */\nexport const formatDocumentsAsString = (documents) => documents.map((doc) => doc.pageContent).join(\"\\n\\n\");\n"],
  "mappings": "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",
  "names": ["import_axios", "blocks", "input", "options", "sax", "regex", "s", "uri", "dice", "intersection", "kulczynski", "motyka", "pearson", "squaredChord", "binarySearch", "sum", "dice", "intersection", "kulczynski", "motyka", "toString", "pearson", "squaredChord", "concat", "axios", "axios", "axiosMod"]
}
